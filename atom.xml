<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AriesfunのBlog</title>
  
  <subtitle>欢迎来到我の小破站!</subtitle>
  <link href="https://ariesfun.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://ariesfun.gitee.io/"/>
  <updated>2023-03-06T18:16:34.615Z</updated>
  <id>https://ariesfun.gitee.io/</id>
  
  <author>
    <name>Ariesfun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据分析与可视化 实践基础作业一（NumPy）</title>
    <link href="https://ariesfun.gitee.io/posts/2946.html"/>
    <id>https://ariesfun.gitee.io/posts/2946.html</id>
    <published>2023-03-06T18:12:31.079Z</published>
    <updated>2023-03-06T18:16:34.615Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据分析与可视化-实践基础作业一（NumPy）"><a href="#数据分析与可视化-实践基础作业一（NumPy）" class="headerlink" title="数据分析与可视化 实践基础作业一（NumPy）"></a>数据分析与可视化 实践基础作业一（NumPy）</h2><hr><h3 id="一、Numpy相关函数或属性"><a href="#一、Numpy相关函数或属性" class="headerlink" title="一、Numpy相关函数或属性"></a>一、Numpy相关函数或属性</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> np.array() <span class="comment"># 可用于创建n维数组      </span></span><br><span class="line"><span class="number">2.</span> np.arange(n) <span class="comment"># 创建递增数组，也可指定起始和终止元素的范围（默认0到n-1）     </span></span><br><span class="line"><span class="number">3.</span> np.ones(shape) <span class="comment"># 创建全1数组，可自定义数组的尺寸（形状）</span></span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> np.zeros(shape) <span class="comment"># 创建全0数组，可自定义尺寸     </span></span><br><span class="line"><span class="number">5.</span> np.full(shape，val) <span class="comment"># 创建多维尺寸数组，val值可指定元素值   </span></span><br><span class="line"><span class="number">6.</span> np.eye(n) <span class="comment"># 创建一个n阶的单位方阵，对角线上全为1，其余为0 </span></span><br><span class="line"></span><br><span class="line"><span class="number">7.</span> np.diag(n) <span class="comment"># 以一维数组的返回方阵的对角线上元素</span></span><br><span class="line">  <span class="comment"># 对于一维数组会返回方阵（对角线上为一维元素值，其余元素为0）</span></span><br><span class="line">    </span><br><span class="line"><span class="number">8.</span> np.linspace() <span class="comment"># 创建等差一维数组</span></span><br><span class="line">  <span class="comment"># 返回介于某个区间等间距分布的数，最后1个参数表示输出元素的总个数</span></span><br><span class="line">    </span><br><span class="line"><span class="number">9.</span> np.logspace() <span class="comment"># 创建等比一维数组 </span></span><br><span class="line"></span><br><span class="line"><span class="number">10.</span> np.random.randint() <span class="comment"># 创建含起始和终止点的的整型数组，其参数size可自定义尺寸   </span></span><br><span class="line"><span class="number">11.</span> .reshape(shape) <span class="comment"># 重塑数组的尺寸（多维）原数组不变，利用数组元素个数size唯一    </span></span><br><span class="line"><span class="number">12.</span> .resize(shape) <span class="comment"># 重塑数组的尺寸，会修改原数组</span></span><br><span class="line"></span><br><span class="line"><span class="number">13.</span> .swapaxes(ax1,ax2) <span class="comment">#将数组n个维度中的2个维度进行调换   </span></span><br><span class="line"><span class="number">14.</span> .flatten() <span class="comment"># 对数组进行降维，返回折叠后的一维数组，原数组不变       </span></span><br><span class="line"><span class="number">15.</span> .astype() <span class="comment"># 强制数据类型转换，会创建新的数组（是原始数据的一个拷贝）</span></span><br><span class="line"></span><br><span class="line"><span class="number">16.</span> .tolist() <span class="comment"># 数组转列表       </span></span><br><span class="line"><span class="number">17.</span> np.hstack() <span class="comment"># 横向合并      </span></span><br><span class="line"><span class="number">18.</span> np.vstack() <span class="comment"># 纵向合并</span></span><br><span class="line"></span><br><span class="line"><span class="number">19.</span> np.concatenate() <span class="comment"># 参数axis = 0时按行合并 </span></span><br><span class="line">  <span class="comment"># 参数axis = 1时按列合并（等价于横向合并np.hstack()）</span></span><br><span class="line">    </span><br><span class="line"><span class="number">20.</span> np.hsplit() <span class="comment"># 横向分隔       </span></span><br><span class="line"><span class="number">21.</span> np.vsplit() <span class="comment"># 纵向分隔</span></span><br><span class="line"></span><br><span class="line"><span class="number">22.</span> np.split() <span class="comment"># 对数组进指定方向的分隔        </span></span><br><span class="line"><span class="number">23.</span> .tanspose() <span class="comment"># 对数组进行转置，参数是轴编号组成的元组（行 —&gt; 列）  </span></span><br><span class="line"><span class="number">24.</span> .T <span class="comment"># 还可利用数组的T属性来转置</span></span><br></pre></td></tr></table></figure><hr><h3 id="二、练习题目"><a href="#二、练习题目" class="headerlink" title="二、练习题目"></a>二、练习题目</h3><p>1、创建一个元素为从10到49的ndarray对象D1；<br>2、将D1的所有元素位置反转；<br>3、使用np.random.random创建一个10 x 10的ndarray对象，并打印出最大最小元素；<br>4、创建一个10 x 10的ndarray对象，且矩阵边界全为1，里面全为0；<br>5、创建一个范围在(0,1)之间的长度为12的等差数列；<br>6、创建一个长度为10的随机数组并排序；<br>7、给定一个4维矩阵，如何得到最后两维的和？<br>8、如何将数组a = np.arange(10).reshape(2,-1)和数组b = np.repeat(1, 10).<br>reshape(2,-1)水平堆叠？</p><hr><h3 id="三、题解"><a href="#三、题解" class="headerlink" title="三、题解"></a>三、题解</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、创建一个元素为从10到49的ndarray对象D1；</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">D1 = np.arange(<span class="number">10</span>, <span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;D1:&#x27;</span>, D1)</span><br></pre></td></tr></table></figure><pre><code>D1: [10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2、将D1的所有元素位置反转；</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">D1 = np.arange(<span class="number">10</span>, <span class="number">50</span>)</span><br><span class="line">a = D1[: : -<span class="number">1</span>] <span class="comment"># 逆序</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a:&#x27;</span>, a)</span><br></pre></td></tr></table></figure><pre><code>a: [49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 3、使用np.random.random创建一个10*10的ndarray对象，并打印出最大最小元素；</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.random.random( (<span class="number">10</span>, <span class="number">10</span>) )</span><br><span class="line"><span class="comment"># print(&#x27;a:&#x27;, a)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;MaxValue:&#x27;</span>, a.<span class="built_in">max</span>())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;MinValue:&#x27;</span>, a.<span class="built_in">min</span>())</span><br></pre></td></tr></table></figure><pre><code>MaxValue: 0.9627995218664797MinValue: 0.005820752655498862</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 4、创建一个10*10的ndarray对象，且矩阵边界全为1，里面全为0；</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.zeros( (<span class="number">10</span>,<span class="number">10</span>) )</span><br><span class="line">a[<span class="number">0</span>, : ] = a[<span class="number">9</span>, : ] = a[ : , <span class="number">0</span>] = a[ : , <span class="number">9</span>] = <span class="number">1</span> <span class="comment"># 获取第1行、第9行、第1列、第9列的数组值将其改为1</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><pre><code>[[1. 1. 1. 1. 1. 1. 1. 1. 1. 1.] [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.] [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.] [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.] [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.] [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.] [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.] [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.] [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.] [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 5、创建一个范围在(0,1)之间的长度为12的等差数列；</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.linspace(<span class="number">0</span>, <span class="number">1</span>, <span class="number">12</span>) <span class="comment"># 第3个参数为元素个数，从0到1生成了12个等间隔的数</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><pre><code>[0.         0.09090909 0.18181818 0.27272727 0.36363636 0.45454545 0.54545455 0.63636364 0.72727273 0.81818182 0.90909091 1.        ]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 6、创建一个长度为10的随机数组并排序；</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.random.random(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a:&#x27;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(np.sort(a)) <span class="comment"># 升序输出</span></span><br></pre></td></tr></table></figure><pre><code>a: [0.46602273 0.68013528 0.39960639 0.59603541 0.30224607 0.43446988 0.84969599 0.80521228 0.6243939  0.43140521][0.30224607 0.39960639 0.43140521 0.43446988 0.46602273 0.59603541 0.6243939  0.68013528 0.80521228 0.84969599]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 7、给定一个4维矩阵，如何得到最后两维的和？</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.ones( (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>) ) <span class="comment"># 定义1个三维的含2个（3行4列）的全一数组</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a:&#x27;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Sum:&#x27;</span>, a.<span class="built_in">sum</span>(axis = (<span class="number">2</span>, <span class="number">3</span>)) ) <span class="comment"># axis=(2, 3)) 表示对第3个和第4个维度求和</span></span><br></pre></td></tr></table></figure><pre><code>a: [[[[1. 1. 1. 1.]   [1. 1. 1. 1.]   [1. 1. 1. 1.]]  [[1. 1. 1. 1.]   [1. 1. 1. 1.]   [1. 1. 1. 1.]]]]Sum: [[12. 12.]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 8、如何将数组a = np.arange(10).reshape(2,-1)和数组b = np.repeat(1, 10).reshape(2,-1)水平堆叠？</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.arange(<span class="number">10</span>).reshape(<span class="number">2</span>, -<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a:&#x27;</span>, a)</span><br><span class="line">b = np.repeat(<span class="number">1</span>, <span class="number">10</span>).reshape(<span class="number">2</span>, -<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;b:&#x27;</span>, b)</span><br><span class="line"></span><br><span class="line">c= np.hstack( (a, b) ) <span class="comment"># np.hstack是横向合并 或用 np.concatenate((a, b), axis = 1) 按列合并</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;c:&#x27;</span>, c)</span><br></pre></td></tr></table></figure><pre><code>a: [[0 1 2 3 4] [5 6 7 8 9]]b: [[1 1 1 1 1] [1 1 1 1 1]]c: [[0 1 2 3 4 1 1 1 1 1] [5 6 7 8 9 1 1 1 1 1]]</code></pre><hr><h3 id="四、参考资料"><a href="#四、参考资料" class="headerlink" title="四、参考资料"></a>四、参考资料</h3><p>视频：</p><p><a href="https://www.bilibili.com/video/BV1Wy4y1h7ii/?share_source=copy_web&vd_source=64863a79f6edd334371cb7b41a0df347">【一个10分钟的numpy入门教程】</a></p><p><a href="https://www.bilibili.com/video/BV1xK411X7ZQ/?share_source=copy_web&vd_source=64863a79f6edd334371cb7b41a0df347">【Python Numpy入门精华】</a></p><p>文章：</p><p><a href="https://numpy.org/doc/">NumPy官方文档</a></p><p><a href="http://t.csdn.cn/K7m3Y">Numpy经典题目简答</a></p><p><a href="http://t.csdn.cn/TsyAn">Python3：numpy模块中的argsort()函数</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;数据分析与可视化-实践基础作业一（NumPy）&quot;&gt;&lt;a href=&quot;#数据分析与可视化-实践基础作业一（NumPy）&quot; class=&quot;headerlink&quot; title=&quot;数据分析与可视化 实践基础作业一（NumPy）&quot;&gt;&lt;/a&gt;数据分析与可视化 实践基础作业一（</summary>
      
    
    
    
    <category term="数据分析与可视化" scheme="https://ariesfun.gitee.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
    <category term="NumPy" scheme="https://ariesfun.gitee.io/tags/NumPy/"/>
    
    <category term="Python" scheme="https://ariesfun.gitee.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础  第二讲 Tmux 和 Vim</title>
    <link href="https://ariesfun.gitee.io/posts/62ad.html"/>
    <id>https://ariesfun.gitee.io/posts/62ad.html</id>
    <published>2023-03-05T08:50:02.726Z</published>
    <updated>2023-03-05T08:50:03.077Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第二讲-tmux-和-vim"><a href="#第二讲-tmux-和-vim" class="headerlink" title="第二讲 tmux 和 vim"></a>第二讲 tmux 和 vim</h1><h3 id="1-tmux教程"><a href="#1-tmux教程" class="headerlink" title="1. tmux教程"></a>1. tmux教程</h3><ul><li><p>功能：</p><p> (1) 分屏。</p><p> (2) 允许断开Terminal连接后，继续运行进程。</p><p>结构：</p><pre><code>    一个tmux可以包含多个session（会话），</code></pre><p>​        一个session可以包含多个window（窗口），</p><p>​        一个window可以包含多个pane（小窗口，进行shell交互）。</p></li><li><p>实例：</p><pre><code>   tmux:       session 0:           window 0:               pane 0               pane 1               pane 2               ...           window 1           window 2           ...       session 1       session 2       ...</code></pre></li><li><p>操作：</p><pre><code> (1) `tmux`：新建一个session，其中包含一个window，window中包含一个pane，pane里打开了一个shell对话框。</code></pre><p> ​    (2) 按下<code>Ctrl + A</code> 后手指松开，然后按<code>%</code>：将当前pane<strong>左右平分</strong>成两个pane。</p><p> ​    (3) 按下<code>Ctrl + A </code>后手指松开，然后按<code>&quot;</code>（双引号）：将当前pane<strong>上下平分</strong>成两个pane。</p><p> ​    (4) <code>Ctrl + D</code>：关闭当前pane；如果当前window的所有pane均已关闭，则自动关闭window；如果当前session的所有window均已关闭，则自动关闭session。</p><p> ​    (5) 鼠标点击可以选pane。</p><p> ​    (6) 按下<code>Ctrl + A</code> 后手指松开，然后按方向键：选择相邻的pane。</p><p> ​    (7) 鼠标拖动pane之间的分割线，可以调整分割线的位置。</p><p> ​    (8) 按住<code>Ctrl + A </code>的同时按方向键，可以调整pane之间分割线的位置。</p><p> ​    (9) 按下<code>Ctrl + A</code> 后手指松开，然后按<code>z</code>：将当前pane<strong>全屏/取消全屏</strong>。<br> ​    (10) 按下<code>Ctrl + A </code> 后手指松开，然后按<code>d</code>：<strong>挂起当前session</strong>。</p><p>  ​    (11)<code>tmux a</code>：打开之前挂起的session。</p><p>  ​    (12) 按下<code>Ctrl + A</code> 后手指松开，然后按<code>s</code>：选择其它session。<br> ​        方向键 —— 上：选择上一项 session/window/pane<br> ​        方向键 —— 下：选择下一项 session/window/pane</p><pre><code>     方向键 —— 右：展开当前项 session/window     方向键 —— 左：闭合当前项 session/window</code></pre><p>  ​    (13) 按下<code>Ctrl + A</code> 后手指松开，然后按<code>c</code>：在当前session中<strong>创建一个新的window</strong>。</p><p>  ​    (14) 按下<code>Ctrl + A</code> 后手指松开，然后按<code>w</code>：<strong>选择其他window</strong>，操作方法与(12)完全相同。</p><p>  ​    (15) 按下<code>Ctrl + A</code> 后手指松开，然后按<code>PageUp</code>：翻阅当前pane内的内容。</p><p>  ​    (16) 鼠标滚轮：翻阅当前pane内的内容。</p><p>  ​    (17) 在tmux中选中文本时，需要按住shift键。（仅支持Windows和Linux，不支持Mac，不过该操作并不是必须的，因此影响不大）</p><p>  ​    (18) tmux中复制/粘贴文本的通用方式：<br> ​         1) 按下<code>Ctrl + A</code>后松开手指，然后按[。<br> ​         2) 用鼠标选中文本，被选中的文本会被自动复制到tmux的剪贴板。<br> ​         3) 按下<code>Ctrl + A</code>后松开手指，然后按]，会将剪贴板中的内容粘贴到光标处。</p></li></ul><h3 id="2-vim教程"><a href="#2-vim教程" class="headerlink" title="2. vim教程"></a>2. vim教程</h3><ul><li>功能：<br>  (1) 命令行模式下的文本编辑器。（相当于加强版的记事本）  (2) 根据文件扩展名自动判别编程语言。支持代码缩进、代码高亮等功能。  (3) 使用方式：<code>vim filename</code><pre><code>  如果已有该文件，则打开它。  如果没有该文件（会新建文件），则打开个一个新的文件，并命名为`filename`。</code></pre></li></ul><ul><li><p>模式：<br>(1) <strong>一般命令模式</strong></p><pre><code>默认模式。命令输入方式：类似于打游戏放技能，按不同字符，即可进行不同操作。</code></pre><p>​    可以复制、粘贴、删除文本等。</p><p>(2) <strong>编辑模式</strong></p><pre><code>在一般命令模式里按下`i`，会进入编辑模式。按下ESC会退出编辑模式，返回到一般命令模式。</code></pre><p>(3) <strong>命令行模式</strong></p><pre><code>在一般命令模式里按下`:/?`三个字母中的任意一个，会进入命令行模式。命令行在最下面。可以查找、替换、保存、退出、配置编辑器环境等。</code></pre></li><li><p>操作：<br>(1)<code> i</code>：进入编辑模式</p><p>(2) <code>ESC键</code>：进入<strong>一般命令模式</strong></p><p>(3) <code>h 或 左箭头键</code>：光标向左移动一个字符</p><p>(4) <code>j 或 向下箭头</code>：光标向下移动一个字符</p><p>(5) <code>k 或 向上箭头</code>：光标向上移动一个字符</p><p>(6) <code>l 或 向右箭头</code>：光标向右移动一个字符</p><p>在一般命令模式下，</p><p>(7) <code>n + 空格</code>：光标往后跳，n表示数字，按下数字后再按空格，光标会向右移动这一行的n个字符。</p><p>(8) <code>0 或 功能键[Home]</code>：光标移动到本行开头。</p><p>(9) <code>$ 或 功能键[End]</code>：光标移动到本行末尾。</p><p>(10) <code>G 或 Shift + g </code> 光标移动到最后一行。</p><p>(11) <code>:n</code> 或 nG：n为数字，光标移动到第n行。</p><p>(12) <code>gg</code>：光标移动到第一行，相当于1G。</p><p>(13) <code>n + 回车</code>：所在行向下跳，n为数字，光标向下移动n行。</p><p>(14) <code>/word</code>：<strong>向下找</strong>，向光标之下寻找第一个值为word的字符串。</p><p>(15) <code>?word</code>：<strong>向上找</strong>，向光标之上寻找第一个值为word的字符串。</p><p>(16) <code>n</code>：重复前一个查找操作。</p><p>(17) <code>N</code>：反向重复前一个查找操作。</p><p>(18) <code>:n1,n2s/word1/word2/g</code>：n1与n2为数字（行号），在第n1行与n2行之间寻找word1这个字符。串，并将该字符串替换为word2。</p><p>(19) <code>:1,$s/word1/word2/g</code>：将全文的word1替换为word2。</p><p>(20) <code>:1,$s/word1/word2/gc</code>：将全文的word1替换为word2，且在替换前要求用户确认。</p><p>(21) <code>v</code>：选中文本。</p><p>(22) <code>d</code>：删除选中的文本 (实际上是剪切)。</p><p>(23) <code>dd</code>: 删除当前行（剪切）。</p><p>(24) <code>y</code>：复制选中的文本。</p><p>(25) <code>yy</code>: 复制当前行。</p><p>(26) <code>p</code>: 将复制的数据<strong>在光标的下一行/下一个位置粘贴</strong>。</p><p>(27) <strong><code>u</code>：撤销</strong>。</p><p>(28) <code>Ctrl + R</code>：取消撤销。</p><p>(29) <code>&gt; 大于号</code> ：将选中的文本整体向右缩进一次。</p><p>(30) <code>&lt; 小于号</code> ：将选中的文本整体向左缩进一次。</p><p>保存或退出具体要看当前用户的权限，</p><p>(31) <code>:w</code> 保存。</p><p>(32) <code>:w!</code> 强制保存。</p><p>(33) <code>:q</code> 退出。</p><p>(34) <code>:q!</code> 强制退出。</p><p>(35) <code>:wq</code> 保存并退出。</p><p>(36) <code>:set paste</code> 设置成粘贴模式，取消代码自动缩进。（<strong>向vim内粘贴文本会用到</strong>）</p><p>(37) <code>:set nopaste</code> 取消粘贴模式，开启代码自动缩进。</p><p>(38) <code> :set nu</code> 显示行号。</p><p>(39) <code>:set nonu</code> 隐藏行号。可用于全屏下复制代码文本。</p><p>(40) <code>gg=G</code>：将全文代码格式化显示（自动缩进）。</p><p>ps：<code>ggdG</code>, 删除所有行。</p><p>(41) <code> :noh</code>：关闭查找关键词高亮。</p><p>(42) <code>Ctrl + Q</code>：（中断当前命令）当vim卡死时，可以<strong>取消当前正在执行的命令</strong>。</p><p>异常处理：</p><p>每次用vim编辑文件时，会自动创建一个<code>.filename.swp</code>的临时文件。</p><p>如果打开某个文件时，该文件的swp文件已存在，则会报错。此时解决办法有两种：</p><p>​    (1) 找到正在打开该文件的程序，并退出。</p><p>​    (2) 直接删掉该swp文件即可。</p></li></ul><h3 id="3-创建作业-amp-测试作业的正确性"><a href="#3-创建作业-amp-测试作业的正确性" class="headerlink" title="3. 创建作业 &amp; 测试作业的正确性"></a>3. 创建作业 &amp; 测试作业的正确性</h3><pre><code>`homework 2 create` 可以重新创建所有lesson_2的作业。`homework 2 create id` 可以单独创建lesson_2的第id个作业。e.g. `homework 2 create 0` 可以只重新创建lesson_2的第0个作业。`homework 2 test` 可以评测lesson_2的所有作业。</code></pre><h3 id="4-作业"><a href="#4-作业" class="headerlink" title="4. 作业"></a>4. 作业</h3><pre><code>见AcWing课程打卡笔记。</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第二讲-tmux-和-vim&quot;&gt;&lt;a href=&quot;#第二讲-tmux-和-vim&quot; class=&quot;headerlink&quot; title=&quot;第二讲 tmux 和 vim&quot;&gt;&lt;/a&gt;第二讲 tmux 和 vim&lt;/h1&gt;&lt;h3 id=&quot;1-tmux教程&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="Linux基础知识" scheme="https://ariesfun.gitee.io/categories/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Linux" scheme="https://ariesfun.gitee.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础  第一讲 常用文件管理命令</title>
    <link href="https://ariesfun.gitee.io/posts/54cf.html"/>
    <id>https://ariesfun.gitee.io/posts/54cf.html</id>
    <published>2023-03-05T08:43:12.888Z</published>
    <updated>2023-03-05T15:22:30.384Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一讲-常用文件管理命令"><a href="#第一讲-常用文件管理命令" class="headerlink" title="第一讲 常用文件管理命令"></a>第一讲 常用文件管理命令</h1><p>PS：（Linux学习基础：需具备一定的算法基础） ​<br> ​<strong>各种命令学习注重实用主义，应用为主</strong><br> ​<strong>各种命令的用法学习不能求全，不会的现查即可，边学先查。</strong></p><h2 id="0-课程概论"><a href="#0-课程概论" class="headerlink" title="0. 课程概论"></a>0. 课程概论</h2><ul><li><pre><code> 1. 课程概论</code></pre></li></ul><pre><code>（1）目标：锻炼动手能力，学完之后可以做出什么项目    后端服务端开发必备技能。（2）什么是Linux ? Ubuntu、CentOS ?    [Linux-百度百科](https://baike.baidu.com/item/Linux?fromModule=lemma_search-box)        Ubuntu 和 Centos 都是基于Linux的操作系统(Linux的不同发行版本)，它们的编译方式有所不同。（3）未来工作方式，Terminal,  命令行交互方式    入云（数字化）    Terminal：终端就是连接内核与交互界面的这座桥，并且使用命令行的交互方式。</code></pre><ul><li><ol start="2"><li>文件系统</li></ol><p>  （1）文件系统结构</p><p>​    在 Linux 或 Unix 操作系统中，所有的文件和目录都被组织成以一个根节点<code>/</code> 开始的倒置的树状结构。</p><p>​    <code>tree</code>: 该命令可以用树状图列出目录的内容。</p><p>  （2）路径</p><p>​    绝对路径、相对路径、根目录</p><p>​    </p><p>​    <strong>a. 绝对路径</strong>：从<code>/</code> 开始描述</p><p>​    <strong>b. 相对路径</strong>:  （可使用<code>pwd</code>命令）输出当前所在的路径</p><p>​    <strong>c. 根目录名称</strong>：<code>/</code>（除号）</p></li></ul><p>​            根目录下常见的子目录有，</p><p>​            bin: 包含常用的可执行文件的命令</p><p>​            etc: 一些配置文件，比如nginx服务器</p><p>​            var:  存一些日志文件（log）</p><p>​            lib: 存一些安装包（静态文件库）、头文件</p><p>​            home: 系统用户的家目录</p><p>​        补充：</p><p>​        <code>.</code>  ，一个点： 表示当前目录</p><p>​        <code>..</code> ，两个点：到上级目录</p><p>​        <code>~/ </code> ,  表示家目录（等价于用户的目录<code>/home/user01/</code>）</p><ul><li><ol start="3"><li>文件管理的常用命令</li></ol></li></ul><hr><h2 id="1-常用命令介绍"><a href="#1-常用命令介绍" class="headerlink" title="1. 常用命令介绍"></a>1. 常用命令介绍</h2><p>(1)  <code>ctrl c</code>:  取消命令，并且换行(换行并清空)</p><p>(2)  <code>ctrl u</code>:  清空本行命令</p><p>(3) <code>tab键</code>： 可以补全命令和文件名，如果补全不了快速按两下tab键，可以显示备选选项</p><p>(4) <code>ls</code>:  列出当前目录下所有文件，蓝色的是文件夹，白色的是普通文件，绿色的是可执行文件</p><p><code>ls -l</code>:  查看文件详细信息（权限、创建时间、名称等）<br><code>ls -h</code>:  命令加h,可将文件大小按格式化输出<br><code>ls -a</code>:  查看隐藏文件（文件名以<code>.</code>开头的）<br><code>ll </code>: 等价于<code> ls -la</code>, 查看所有文件详细信息<br><code>ls -文件名</code> : 查看该文件目录下的所有文件</p><p><code>ls -l | wc -l</code>:  统计当前目录下的文件数量</p><p>(5)     <code>pwd</code>:  显示当前路径</p><p>(6)     <code>cd XXX</code>:  进入XXX目录下(绝对或相对), </p><p><code>cd</code>:  回到家目录<br><code>cd .. </code>：返回上层目录<br><code>cd ~</code>: 返回改变路径前的路径</p><p>(7)  <strong><code>cp</code> : 复制 + 粘贴 + 重命名</strong></p><p><code>cp XXX YYY</code>:  将XXX文件复制成YYY，XXX和YYY可以是一个路径，</p><p><code>cp XXX YYY -r</code> 将XXX目录（文件夹）复制到YYY下</p><p><code>../dir_c/a.txt</code>，表示上层目录下的dir_c文件夹下的文件a.txt</p><p>(8) <code>mkdir XXX</code>: 创建目录XXX（文件夹）</p><p><code>mkdir XXX -p</code>：如果文件夹XXX不存在，会自动创建</p><p>(9) <code>rm XXX</code>: 删除普通文件</p><p><code>rm XXX -r</code>:  删除文件夹, -r是递归删</p><p><code>rm *.txt</code>:  删除所有<code>.txt</code>类型文件,文件名是支持正则表达式的</p><p><code>rm *</code>: 删除所有文件（不包括文件夹）,eg. <code>rm a/*</code> 删除目录a下的所有文件</p><p><code>rm * -r</code>: 删除所有文件夹(不会删除隐藏文件), 支持正则表达式</p><p>(10) <strong><code>mv</code>: 剪切 + 粘贴 + 重命名</strong></p><p><code>mv XXX YYY</code>: 将XXX文件移动到YYY，</p><p>和cp命令一样，XXX和YYY可以是一个路径，重命名也是用这个命令</p><p>(11) <code>touch XXX</code>: 创建一个文件</p><p>(12) <code>cat XXX</code>: 展示文件XXX中的内容</p><p>(13) 复制文本<br>    Windows/Linux下：<code>Ctrl + insert</code>，Mac下：<code>command + c</code></p><p>(14) 粘贴文本<br>    Windows/Linux下：<code>shift + insert</code>，Mac下：<code>command + v</code></p><p>ps: 其他命令</p><pre><code>`tmux`:（一种工具） 可以让任务一直挂在后台运行`tree`: 可以用树状图列出目录的内容`history`: 可查看输入命令的历史记录</code></pre><h2 id="2-创建作业-amp-测试作业的正确性"><a href="#2-创建作业-amp-测试作业的正确性" class="headerlink" title="2. 创建作业 &amp; 测试作业的正确性"></a>2. 创建作业 &amp; 测试作业的正确性</h2><pre><code>`homework 1 create` 可以重新创建所有lesson_1的作业`homework 1 create id` 可以单独创建lesson_1的第id个作业. e.g.`homework 1 create 0` 可以只重新创建lesson_1的第0个作业`homework 1 test` 可以评测lesson_1的所有作业</code></pre><h2 id="3-作业"><a href="#3-作业" class="headerlink" title="3. 作业"></a>3. 作业</h2><pre><code>见AcWing课程打卡笔记。第一次课截图打卡hhh![lesson_1](https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202303051640533.jpg)</code></pre><h2 id="4-参考文章"><a href="#4-参考文章" class="headerlink" title="4. 参考文章"></a>4. 参考文章</h2><pre><code>[AcWing工程课系列 - Linux基础课](https://www.acwing.com/activity/content/57/)[讲义1. 常用文件管理命令](https://www.acwing.com/file_system/file/content/whole/index/content/2855530/)[zst同学笔记](https://www.acwing.com/blog/content/13214/)</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一讲-常用文件管理命令&quot;&gt;&lt;a href=&quot;#第一讲-常用文件管理命令&quot; class=&quot;headerlink&quot; title=&quot;第一讲 常用文件管理命令&quot;&gt;&lt;/a&gt;第一讲 常用文件管理命令&lt;/h1&gt;&lt;p&gt;PS：（Linux学习基础：需具备一定的算法基础） ​&lt;br</summary>
      
    
    
    
    <category term="Linux基础知识" scheme="https://ariesfun.gitee.io/categories/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="Linux" scheme="https://ariesfun.gitee.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Gitee + Hexo 博客推送部署失败问题解决(排除文档中的不合规内容)</title>
    <link href="https://ariesfun.gitee.io/posts/31f9.html"/>
    <id>https://ariesfun.gitee.io/posts/31f9.html</id>
    <published>2023-03-01T18:03:27.327Z</published>
    <updated>2023-03-02T15:37:49.081Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Gitee-Hexo-博客推送部署失败问题解决-排除文档中的不合规内容"><a href="#Gitee-Hexo-博客推送部署失败问题解决-排除文档中的不合规内容" class="headerlink" title="Gitee + Hexo 博客推送部署失败问题解决(排除文档中的不合规内容)"></a>Gitee + Hexo 博客推送部署失败问题解决(排除文档中的不合规内容)</h2><h3 id="一、问题说明"><a href="#一、问题说明" class="headerlink" title="一、问题说明"></a>一、问题说明</h3><p>大概是在22年12月的时候，我用git服务提交本地代码到Gitee仓库后，再启用<a href="https://gitee.com/help/articles/4136">Gitee Pages服务</a>开始部署推送新文章时出现了下面的提示界面，导致博客部署错误。</p><p>Gitee Pages服务提示的错误为：<code>index.html页面可能包含违禁违归内容</code></p><p>想来就觉得纳闷，自己写的内容也不至于直接违规了吧，我的内容大多数是知识笔记的记录而已。</p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202303020014895.jpg" alt="img-202303020014895"  /><h3 id="二、排查问题"><a href="#二、排查问题" class="headerlink" title="二、排查问题"></a>二、排查问题</h3><p>接着按照说明，我到指定的html页面中查找问题，发现好像是某篇数据库MySQL案例中的题干涉及到了ZZ问题，我感觉就这块内容确实不太好说，言多必失。</p><p>学习案例里用的数据库是Google的一个老sql数据库文件，涵盖了全世界的国家、国家语言和城市的相关信息。题干中就出现了有数据库更新操作要求，图我就不贴了。总之咱的ZZ方向不能错哈。</p><p>我仔细校对原博客文章，修改了一些关键词后，再次推送文章后，但问题依旧。我也上网查了相关的案例，但还是没有找到好的解决方法。</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202303020122925.jpg" alt="img-202303020122925"></p><p>嗯索性就简单粗暴点，我把这篇问题文章给移除了，不让它推送出来，果真问题得到解决了。</p><p>这样就能继续愉快的更新文章了哈~</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202303020110605.jpg" alt="img-202303020110605"></p><h3 id="三、简单总结"><a href="#三、简单总结" class="headerlink" title="三、简单总结"></a>三、简单总结</h3><p>22年的12月算是很特殊的一个时间段，寒假提前到来，接着疫情放开，我也被要求早早离校。将近在家又上了一段时间的线上课，博客部署的问题就被搁置了，直到最近这个问题才给解决掉。</p><p>出问题的那篇文章在12月的时候，距离文章发布已经一个多月了，后面部署推送的文章都没出现上面问题。按照官方的说明，想必是Gitee的服务器升级了，对现有的Gitee Pages服务审核更严格了，我才会遇到这类问题。但这也是好事，我作为内容分享者，更应对自己公开发表的内容负责，传播正确的政治立场。</p><p>现在已经2023年春了，博客文章推送已经鸽了快4个月，后续我还会继续更新的，寒假期间还有点存货哈~</p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202303020128742.jpg" alt="img/202303020128742.jpg" style="zoom:67%;" />]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Gitee-Hexo-博客推送部署失败问题解决-排除文档中的不合规内容&quot;&gt;&lt;a href=&quot;#Gitee-Hexo-博客推送部署失败问题解决-排除文档中的不合规内容&quot; class=&quot;headerlink&quot; title=&quot;Gitee + Hexo 博客推送部署失败问</summary>
      
    
    
    
    <category term="Hexo博客问题解决" scheme="https://ariesfun.gitee.io/categories/Hexo%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
    <category term="Hexo" scheme="https://ariesfun.gitee.io/tags/Hexo/"/>
    
    <category term="Gitee" scheme="https://ariesfun.gitee.io/tags/Gitee/"/>
    
  </entry>
  
  <entry>
    <title>计组CH1 第一章 计算机概要与技术</title>
    <link href="https://ariesfun.gitee.io/posts/bb40.html"/>
    <id>https://ariesfun.gitee.io/posts/bb40.html</id>
    <published>2022-11-29T00:57:17.110Z</published>
    <updated>2022-11-29T16:56:24.331Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计组CH1-第一章-计算机概要与技术"><a href="#计组CH1-第一章-计算机概要与技术" class="headerlink" title="计组CH1 第一章 计算机概要与技术"></a>计组CH1 第一章 计算机概要与技术</h1><h2 id="CH1-计算机概要与技术"><a href="#CH1-计算机概要与技术" class="headerlink" title="CH1    计算机概要与技术"></a><strong>CH1    计算机概要与技术</strong></h2><h3 id="思维导图："><a href="#思维导图：" class="headerlink" title="思维导图："></a>思维导图：</h3><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211290146245.jpg" alt="CH1 章节导图"></p><h3 id="一、计算机的分类与设计思想"><a href="#一、计算机的分类与设计思想" class="headerlink" title="一、计算机的分类与设计思想"></a>一、计算机的分类与设计思想</h3><ul><li><h4 id="计算机的分类"><a href="#计算机的分类" class="headerlink" title="计算机的分类"></a>计算机的分类</h4></li></ul><p><strong>传统上</strong>，按照应用，计算机可以分为：</p><p><u>个人计算机</u><u>（PC）</u><br><u>服务器</u>，适用于执行大负载任务，多用户通过网络并行访问；高端服务器被称为超级计算机<br><u>嵌入式计算机</u>，是数量最多的一类计算机</p><p>进入<strong>后PC时代</strong>：</p><p>往小的方向发展为：<u>个人移动设备（PMD）</u></p><p>往大的方向发展为：<u>仓储规模计算机（WSC）</u>（Warehouse-Scale Computer），大型数据中心的云计算服务器</p><ul><li><h4 id="计算机的八个伟大思想"><a href="#计算机的八个伟大思想" class="headerlink" title="计算机的八个伟大思想"></a>计算机的八个伟大思想</h4></li></ul><p>导图：</p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211290204234.jpg" alt="8个伟大思想" style="zoom:50%;" /><p>2个设计原则：</p><p>（1） 摩尔定律</p><p><u>单芯片上的集成度</u>（单位面积硅片能容纳的晶体管数量）<u>每18个月翻一番</u></p><p>提出于1965，芯片设计要依据设计开始/完成？时的工艺水平</p><p>（2）抽象，省略低层次的细节，提供简化的模型</p><p>4个提高性能的方法：</p><p>（3）加速大概率事件</p><p>一台计算机绝大部分时间用来打游戏，改进游戏性能还是其他性能更能提高整体性能？</p><p>定量分析：Amdahl定律    <strong>t改进 = t相关/S + t无关</strong></p><p>即改进后的执行时间 = 改进影响的执行时间 / 改进量 + 改进不影响的执行时间</p><p>（4）并行，同时发生，典型例子是多核处理器</p><p>（5）流水线，类比工业中的流水线</p><p>（6）预测，若1）预测失误后恢复的代价不高；2）预测有相当的准确率    </p><p>​    则可以猜测哪些操作会发生，并提前开始执行</p><p>存储器层次与冗余</p><p>（7）存储器层次（见第三部分 软硬件接口）</p><p>（8）冗余提高可靠性，物理器件的“备胎”，失效了就换上</p><ul><li><h4 id="存储容量"><a href="#存储容量" class="headerlink" title="存储容量"></a>存储容量</h4><p>1、单位（低到高）    千K    兆M    吉G    <strong>太T    拍P    艾E    泽Z    尧Y</strong><br>每两级之间有2^^10（1024）倍的数量关系</p><p>2.B（Byte）字节，b（bit）位</p><p><strong>1 B = 8 b</strong> , 即 1 字节 = 8 位    字节常用于储存容量，位常用于传输速度</p><p>例如：</p><p>i5+GTX3060+8G+512G~B/b？（字节B，代表存储容量）</p><p>100兆的宽带B/b？（位b, 100Mbps 约等于 12.5 MB/S）</p></li></ul><hr><h3 id="二、软硬件基础（简述）"><a href="#二、软硬件基础（简述）" class="headerlink" title="二、软硬件基础（简述）"></a>二、软硬件基础（简述）</h3><p>导图：</p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211290213119.jpg" alt="软硬件基础" style="zoom:80%;" /><h4 id="1、编程语言分类-3类"><a href="#1、编程语言分类-3类" class="headerlink" title="1、编程语言分类(3类)"></a>1、编程语言分类(3类)</h4><p>（1）<strong>机器指令</strong> （01串）<br>    00000011101001001011001111110010</p><p>（2）<strong>汇编语言</strong>（由指令助记符、寄存器标号构成）<br>    addi $s1, $s1, 1</p><p>（3）<strong>高级语言</strong>    （C/C++，Java…语句接近自然语言，提高了程序的可移植性）<br>    cnt = cnt + 1;<br>    机器语言依赖于机器，所以被称作低级语言</p><h4 id="2、冯·诺依曼结构（五部分）"><a href="#2、冯·诺依曼结构（五部分）" class="headerlink" title="2、冯·诺依曼结构（五部分）"></a>2、冯·诺依曼结构（五部分）</h4><p>组成CPU的两大部件：<u><strong>①运算器（数据通路）、②控制器</strong></u></p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211290224571.jpg" alt="冯洛伊曼结构"></p><p>存放程序和数据的 <u><strong>③存储器</strong></u> </p><p><strong>只有放入内存的程序才能被CPU执行</strong></p><p>缓存cache ~ SRAM 快但是贵，容量很小（3MB）</p><p>主存/内存 ~ DRAM 比较快也比较贵，容量中等（8~16GB）</p><p>辅存/外存/二级存储器 ~ 闪存、磁盘 慢但便宜，容量大（基本都是512GB起步）</p><p>外围的 <u><strong>④输入设备、⑤输出设备</strong></u></p><p>合称I/O设备输入设备：键盘鼠标、扫描仪输出设备：显示器、打印机    </p><p>包括混合I/O设备：触摸屏、网卡</p><h4 id="3、存储器层次结构"><a href="#3、存储器层次结构" class="headerlink" title="3、存储器层次结构"></a>3、存储器层次结构</h4><p>存储器层次：</p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211290232254.jpg" alt="存储器层次结构" style="zoom:45%;" /><p>CPU的主频在3.5GHz，内存条的主频2666MHz，通常是谁等待谁？CPU会等内存<br>解决方法：存储器层次（思想7）</p><p><strong>顶端：快贵小</strong>  →  <strong>底端：慢廉大</strong><br>第一级：<strong>Cache</strong>（和cash同音），采用SRAM技术<strong>（易失性）</strong><br>第二级：<strong>主存/内存（易失性）</strong>，采用DRAM技术<br>SRAM、DRAM断电后数据很快消失，为易失性存储器<br>第三级：<strong>辅存（非易失性）</strong>，过去常用<u>磁盘</u>，现逐渐被<u>闪存</u>代替<br>磁盘、闪存断电后不丢失数据，为非易失性存储器</p><p><strong>Cache位于CPU中</strong> （CPU中包含了少量Cache, 主要有运算器和控制器构成）</p><p>在CPU中塞入cache，<u>好处</u>是：</p><p>1）<u>物理距离近，和两大部件通信迅速</u></p><p>2）只要cache能把CPU即将要用的程序、数据，从内存中复制过来，就能<u>缓解速度矛盾</u></p><h4 id="4、指令集体系结构（ISA）"><a href="#4、指令集体系结构（ISA）" class="headerlink" title="4、指令集体系结构（ISA）"></a>4、指令集体系结构（ISA）</h4><p>苹果的M1系列芯片为什么性能高且续航持久？采用了ARM架构</p><p>CPU的 <strong>指令集体系结构（ISA）</strong>根本上不一样，即可以执行的指令集合大不相同</p><p>一个x86，为了和二三十年前的软件保持兼容，指令只增不减，越来越庞大繁杂</p><p>一个ARM，设计思想主张精简，能效出色</p><p>教材介绍一个和ARM设计思路相近的架构：MIPS</p><p>MIPS和ARM都属于 <strong>RISC架构</strong>    （Reduced Instruction Set Computer，<strong>精简指令集计算机</strong>）</p><p>x86是典型的 <strong>CISC架构</strong>    （Complex……，复杂……）</p><h4 id="5、集成电路制造"><a href="#5、集成电路制造" class="headerlink" title="5、集成电路制造"></a>5、集成电路制造</h4><p>晶体管：受电信号控制的简单开关</p><p>集成电路（Integrated Circuit，IC）：由许多个晶体管组成的芯片</p><p>制造具体过程不太重要，记住结论：</p><p><strong>成品率越高、产量越高、芯片面积越小，芯片的制造成本越低</strong></p><hr><h4 id="CH1-复习题（一、二）"><a href="#CH1-复习题（一、二）" class="headerlink" title="CH1 复习题（一、二）"></a>CH1 复习题（一、二）</h4><p><strong>复习题是用来碎碎念回忆复习的，不是用来写的！</strong></p><p>打*的问题在考试中不太重要或者比较复杂，请酌情跳过</p><p>1、传统上计算机分为哪三类？后PC时代有哪两类计算机？</p><p>2、KB MB GB之上有哪些存储容量单位？</p><p><del>*3、计算机设计的八个伟大思想是？</del></p><p><del>4、Amdahl定律的公式为？</del></p><p>5、高级语言经过什么过程变成汇编语言？汇编语言又经过什么变成机器语言？</p><p>6、冯·诺依曼结构由哪五大基本部件组成？CPU主要有哪两大部件？还有少量的哪个部件？</p><p>7、存储器层次中，最快贵小的、其次的、最慢廉大的是什么？分别采用什么技术？</p><p>8、Intel和苹果的处理器架构不同，是什么东西不同？</p><p>9、成品率、芯片面积、产量如何影响集成电路（IC）的制造成本？</p><hr><h3 id="三、性能与功耗"><a href="#三、性能与功耗" class="headerlink" title="三、性能与功耗"></a>三、性能与功耗</h3><p>思维导图：</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211290300817.jpg" alt="性能与功耗"></p><h4 id="1、评价性能的指标"><a href="#1、评价性能的指标" class="headerlink" title="1、评价性能的指标"></a><strong>1、评价性能的指标</strong></h4><p>鲁大师、安兔兔这些跑分软件的原理？</p><p>SPEC CPU基准测试程序，是一个比较权威的跑分软件</p><p>个人计算机（PC）更看重<strong>响应时间</strong>（又称<strong>执行时间</strong>）：<u>任务从开始到完成的时间</u>，加载进入游戏需要XXX秒钟……</p><p>服务器更看重<strong>吞吐率</strong>：<u>单位时间内完成的任务数量</u>，一秒钟能把网页发送给XXX个用户……</p><p>课程主要讨论<strong>CPU执行时间</strong></p><p>计算机A的性能是计算机B的几倍？→计算机A的执行时间是B的几分之一？</p><p>e.g. 运行同一个程序，计算机A用15秒，计算机B用10秒，谁的性能更高？它的性能比另</p><p>外一台高多少？</p><h4 id="2、CPU经典性能公式"><a href="#2、CPU经典性能公式" class="headerlink" title="2、CPU经典性能公式"></a>2、CPU经典性能公式</h4><p><strong>（1）CPUtime = cycles x T</strong></p><p>CPU时钟周期长度T（CPU干任何事的时间都是一个时钟周期的整数倍）</p><p>干一件事，即执行一个程序，需要多少个时钟周期？</p><p> <strong>CPUtime = cycles x T</strong>    <u>即CPU执行时间 = 时钟周期数 x 时钟周期长度</u></p><p>ps:任何程序都要以机器语言指令的形式，才能被计算机看懂，所以<strong>执行程序本质上就是执行机器指令！</strong></p><p> <strong>（2）cycles = IC x CPI</strong></p><p>不同机器指令需要的周期数不尽相同，所以</p><p>每条机器指令占用的时钟周期数<strong>CPI</strong>（cycles per instruction）是一个平均值，即<strong>总周期数/总指令数</strong></p><p> <strong>cycles = IC x CPI</strong>    <u>即时钟周期数 = 指令数 x 平均每条指令所需周期数</u></p><p><strong>（3）CPUtime = IC x CPI x T     CPU经典性能公式</strong>    </p><p><strong>CPUtime = IC x CPI x T</strong>    <u>即CPU执行时间 = 指令数 x CPI x 时钟周期长</u></p><p>CPU的时钟频率 f（主频）：一秒钟有多少个时钟周期，<strong>T = 1 / f</strong></p><p>所以也能写成，</p><p><strong>CPUtime = IC x CPI / f</strong>     <u>即CPU执行时间 = 指令数 x CPI / 主频</u> </p><p>主频的单位通常是吉赫兹GHz（<strong>G在此处代表10^9</strong>）</p><p>e.g. 主频为4GHz的CPU，每个时钟周期的长度是多少秒？</p><p>某程序共有3亿条指令，其中1亿条的CPI为3，2亿条的CPI为6，整个程序的CPI是多少？</p><p>该CPU执行这个程序需要多长时间？</p><h4 id="3、CPU经典性能公式为什么靠谱"><a href="#3、CPU经典性能公式为什么靠谱" class="headerlink" title="3、CPU经典性能公式为什么靠谱"></a>3、CPU经典性能公式为什么靠谱</h4><p><strong>CPUtime = IC x CPI x T     CPU经典性能公式</strong></p><p>经典性能公式考虑了<u>指令数IC</u>、<u>平均每条指令需要周期数CPI</u>、<u>时钟周期长度T</u>（也就是<u>主频f</u>的倒数）</p><p><strong>全部三个因素</strong>，使用<strong>CPU执行时间</strong>这个靠谱的指标来衡量性能</p><p>使用什么编程语言和编译程序、采取什么算法，<u>影响指令数和CPI两个因素</u></p><p>采用什么<u>指令集体系结构，影响指令数、CPI、主频全部三个因素</u>，它们都会影响CPU性能</p><p>还有一个衡量性能的指标<u>MIPS</u>（million instructions per second，百万指令每秒）</p><p><code>MIPS = IC / (CPUtime x 10^6 ) = f / (CPI x 10^6 )</code></p><p>因为只<u>考虑了主频（周期长）和CPI两个指标</u>，很受作者唾弃</p><h4 id="4、功耗"><a href="#4、功耗" class="headerlink" title="4、功耗"></a>4、功耗</h4><p>在<u>移动设备（PMD）和仓储规模计算机（WSC）</u>中，电能是关键资源</p><p>但随着CPU集成度越来越高，晶体管的数量剧增，功耗越来越大、散热越来越难</p><p>CMOS（互补型金属氧化半导体）是当前占统治地位的集成电路技术</p><p>其中，晶体管的能耗主要来自动态能耗，即晶体管打开/关闭的短暂动态过程</p><p>即0→1或1→0的过程</p><p>一个晶体管经历一次0 → 1 → 0或1 → 0 → 1的开关过程</p><p>能耗 = 负载电容 x 电压^2 </p><p>开关频率与CPU主频相关，所以功耗公式为</p><p><code>P = 1/ 2  * C * U^2 * f </code>    功耗 = 1 /2 x 负载电容 x 电压^2 x 开关频率 </p><hr><h4 id="CH1-复习题（三）"><a href="#CH1-复习题（三）" class="headerlink" title="CH1 复习题（三）"></a>CH1 复习题（三）</h4><p>1、PC和服务器分别更看重哪项性能评价指标？</p><p>2、CPU经典性能公式计算的是什么指标？公式是什么（注意有两个联系密切的版本）？</p><p><del>*3、我们是如何得出经典性能公式的？</del></p><p>4、哪四个东西会通过影响性能公式中的某些项，从而影响性能？</p><p>5、MIPS怎么计算？这个性能指标为什么不靠谱？</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计组CH1-第一章-计算机概要与技术&quot;&gt;&lt;a href=&quot;#计组CH1-第一章-计算机概要与技术&quot; class=&quot;headerlink&quot; title=&quot;计组CH1 第一章 计算机概要与技术&quot;&gt;&lt;/a&gt;计组CH1 第一章 计算机概要与技术&lt;/h1&gt;&lt;h2 id=&quot;C</summary>
      
    
    
    
    <category term="计算机组成原理" scheme="https://ariesfun.gitee.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="计算机组成原理" scheme="https://ariesfun.gitee.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="学习记录" scheme="https://ariesfun.gitee.io/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>计组CH0  第零章 计组课程概述</title>
    <link href="https://ariesfun.gitee.io/posts/d5e3.html"/>
    <id>https://ariesfun.gitee.io/posts/d5e3.html</id>
    <published>2022-11-29T00:57:08.416Z</published>
    <updated>2022-11-29T16:56:24.330Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计组CH0-第零章-计组课程概述"><a href="#计组CH0-第零章-计组课程概述" class="headerlink" title="计组CH0  第零章 计组课程概述"></a>计组CH0  第零章 计组课程概述</h1><h2 id="一、学习资源"><a href="#一、学习资源" class="headerlink" title="一、学习资源"></a>一、学习资源</h2><ul><li><strong>参考教材</strong></li></ul><p>《计算机组成原理》——基于MIPS结构 康磊老师著（本校）</p><p>《计算机机组成与设计》Patterson &amp; Hennesy著  第5版大黑书（川大）</p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211290912984.jpg" alt="大黑书" style="zoom:33%;" /><ul><li><strong>网课资源</strong></li></ul><p>B站UP: <a href="https://space.bilibili.com/157724693">翼云图灵</a> 同级川大学子录制，课程质量我个人觉得非常Nice！！！</p><ul><li><strong>笔记说明</strong></li></ul><p>笔记内容大多源自网课，经整理后发布。主要目的是为了期末备考，来掌握重要考点。</p><p>学校里的课程我不太能跟上~~</p><h2 id="二、课程目录"><a href="#二、课程目录" class="headerlink" title="二、课程目录"></a>二、课程目录</h2><blockquote><h3 id="计算机组成原理"><a href="#计算机组成原理" class="headerlink" title="计算机组成原理"></a><strong>计算机组成原理</strong></h3></blockquote><h3 id="思维导图："><a href="#思维导图：" class="headerlink" title="思维导图："></a><strong>思维导图：</strong></h3><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211290034814.jpg" alt="章节导图"></p><h3 id="章节内容："><a href="#章节内容：" class="headerlink" title="章节内容："></a><strong>章节内容：</strong></h3><p>共五个章节</p><h3 id="CH1-计算机概要与技术"><a href="#CH1-计算机概要与技术" class="headerlink" title="CH1    计算机概要与技术"></a><strong>CH1    计算机概要与技术</strong></h3><ul><li><h4 id="1、计算机的分类与设计思想"><a href="#1、计算机的分类与设计思想" class="headerlink" title="1、计算机的分类与设计思想"></a>1、计算机的分类与设计思想</h4></li><li><h4 id="2、软硬件基础（后续章节细讲）"><a href="#2、软硬件基础（后续章节细讲）" class="headerlink" title="2、软硬件基础（后续章节细讲）"></a>2、软硬件基础（后续章节细讲）</h4></li><li><h4 id="3、性能与功耗"><a href="#3、性能与功耗" class="headerlink" title="3、性能与功耗"></a>3、性能与功耗</h4></li></ul><h3 id="CH2-指令：计算机的语言"><a href="#CH2-指令：计算机的语言" class="headerlink" title="CH2    指令：计算机的语言"></a><strong>CH2    指令：计算机的语言</strong></h3><ul><li><h4 id="1、整数的表示"><a href="#1、整数的表示" class="headerlink" title="1、整数的表示"></a>1、整数的表示</h4></li><li><h4 id="2、运算、数据传送、决策三大类MIPS指令"><a href="#2、运算、数据传送、决策三大类MIPS指令" class="headerlink" title="2、运算、数据传送、决策三大类MIPS指令"></a>2、运算、数据传送、决策三大类MIPS指令</h4></li><li><h4 id="3、MIPS机器语言"><a href="#3、MIPS机器语言" class="headerlink" title="3、MIPS机器语言"></a>3、MIPS机器语言</h4></li><li><h4 id="4、寄存器与寻址方式"><a href="#4、寄存器与寻址方式" class="headerlink" title="4、寄存器与寻址方式"></a>4、寄存器与寻址方式</h4></li><li><h4 id="5、指令对函数调用的支持"><a href="#5、指令对函数调用的支持" class="headerlink" title="5、指令对函数调用的支持"></a>5、指令对函数调用的支持</h4></li></ul><h3 id="CH3-计算机的算术运算"><a href="#CH3-计算机的算术运算" class="headerlink" title="CH3    计算机的算术运算"></a><strong>CH3    计算机的算术运算</strong></h3><ul><li><h4 id="1、整数的加减运算"><a href="#1、整数的加减运算" class="headerlink" title="1、整数的加减运算"></a>1、整数的加减运算</h4></li><li><h4 id="2、附录ALU逻辑设计"><a href="#2、附录ALU逻辑设计" class="headerlink" title="2、附录ALU逻辑设计"></a>2、附录ALU逻辑设计</h4></li><li><h4 id="3、乘法器、除法器及其改进"><a href="#3、乘法器、除法器及其改进" class="headerlink" title="3、乘法器、除法器及其改进"></a>3、乘法器、除法器及其改进</h4></li><li><h4 id="4、浮点数的表示与运算"><a href="#4、浮点数的表示与运算" class="headerlink" title="4、浮点数的表示与运算"></a>4、浮点数的表示与运算</h4></li></ul><h3 id="CH4-CPU处理器"><a href="#CH4-CPU处理器" class="headerlink" title="CH4    CPU处理器"></a><strong>CH4    CPU处理器</strong></h3><ul><li><h4 id="1、简单MIPS指令子集的数据通路实验"><a href="#1、简单MIPS指令子集的数据通路实验" class="headerlink" title="1、简单MIPS指令子集的数据通路实验"></a>1、简单MIPS指令子集的数据通路实验</h4></li><li><h4 id="2、多周期实现"><a href="#2、多周期实现" class="headerlink" title="2、多周期实现"></a>2、多周期实现</h4></li><li><h4 id="3、流水线与三大冒险"><a href="#3、流水线与三大冒险" class="headerlink" title="3、流水线与三大冒险"></a>3、流水线与三大冒险</h4></li></ul><h3 id="CH5-大容量和高速度：开发存储器层次结构"><a href="#CH5-大容量和高速度：开发存储器层次结构" class="headerlink" title="CH5    大容量和高速度：开发存储器层次结构"></a><strong>CH5    大容量和高速度：开发存储器层次结构</strong></h3><ul><li><h4 id="1、四大存储器技术"><a href="#1、四大存储器技术" class="headerlink" title="1、四大存储器技术"></a>1、四大存储器技术</h4></li><li><h4 id="2、Cache的基本原理、性能、一致性"><a href="#2、Cache的基本原理、性能、一致性" class="headerlink" title="2、Cache的基本原理、性能、一致性"></a>2、Cache的基本原理、性能、一致性</h4></li><li><h4 id="3、虚拟存储器"><a href="#3、虚拟存储器" class="headerlink" title="3、虚拟存储器"></a>3、虚拟存储器</h4></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计组CH0-第零章-计组课程概述&quot;&gt;&lt;a href=&quot;#计组CH0-第零章-计组课程概述&quot; class=&quot;headerlink&quot; title=&quot;计组CH0  第零章 计组课程概述&quot;&gt;&lt;/a&gt;计组CH0  第零章 计组课程概述&lt;/h1&gt;&lt;h2 id=&quot;一、学习资源&quot;</summary>
      
    
    
    
    <category term="计算机组成原理" scheme="https://ariesfun.gitee.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="计算机组成原理" scheme="https://ariesfun.gitee.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="学习记录" scheme="https://ariesfun.gitee.io/tags/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>操作系统实验(一)  进程调度算法设计动(动态优先数+时间片轮转法)</title>
    <link href="https://ariesfun.gitee.io/posts/edef.html"/>
    <id>https://ariesfun.gitee.io/posts/edef.html</id>
    <published>2022-11-16T00:14:39.248Z</published>
    <updated>2022-11-30T00:57:47.317Z</updated>
    
    <content type="html"><![CDATA[<h1 id="操作系统实验-一-进程调度算法设计-动态优先数-时间片轮转法"><a href="#操作系统实验-一-进程调度算法设计-动态优先数-时间片轮转法" class="headerlink" title="操作系统实验(一)  进程调度算法设计(动态优先数+时间片轮转法)"></a>操作系统实验(一)  进程调度算法设计(动态优先数+时间片轮转法)</h1><h2 id="模拟进程调度算法，用动态优先数及时间片轮转法实现进程调度"><a href="#模拟进程调度算法，用动态优先数及时间片轮转法实现进程调度" class="headerlink" title="模拟进程调度算法，用动态优先数及时间片轮转法实现进程调度"></a>模拟进程调度算法，用动态优先数及时间片轮转法实现进程调度</h2><h2 id="一、实验要求"><a href="#一、实验要求" class="headerlink" title="一、实验要求"></a>一、实验要求</h2><h3 id="1．内容：-设计一个简单的进程调度算法，模拟OS中的进程调度过程"><a href="#1．内容：-设计一个简单的进程调度算法，模拟OS中的进程调度过程" class="headerlink" title="1．内容： 设计一个简单的进程调度算法，模拟OS中的进程调度过程"></a>1．内容： 设计一个简单的进程调度算法，模拟OS中的进程调度过程</h3><h3 id="2．要求："><a href="#2．要求：" class="headerlink" title="2．要求："></a>2．要求：</h3><p>① 进程数不少于5个；<br>② 进程调度算法任选；最好选用动态优先数法，每运行一个时间片优先数减3；<br>③ 用C++（或C）语言编程；<br>④ 程序运行时显示进程调度过程。</p><h3 id="3．步骤："><a href="#3．步骤：" class="headerlink" title="3．步骤："></a>3．步骤：</h3><p>① 设计PCB及其数据结构：</p><p>  进程标识数：ID</p><p>  进程优先数：PRIORITY（优先数越大，优先级越高）</p><p>  进程已占用时间片：CPUTIME</p><p>  进程尚需时间片：ALLTIME（一旦运行完毕，ALLTIME为0）</p><p>  进程队列指针：NEXT，用来将PCB排成队列</p><p>  进程状态：STATE（一般为就绪，不用）</p><p>② 设计进程就绪队列及数据结构；</p><p>③ 设计进程调度算法，并画出程序流程图；</p><p>④ 设计输入数据和输出格式；</p><p>​     结构格式：当前正运行的进程：0</p><p>​     当前就绪队列：2，1，3，4</p><p>⑤ 编程上机，验证结果。</p><h3 id="4．提示："><a href="#4．提示：" class="headerlink" title="4．提示："></a>4．提示：</h3><p>假设调度前，系统中有5个进程，其初始状态如下：</p><table><thead><tr><th>ID</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>PRIORITY</td><td>9</td><td>38</td><td>30</td><td>29</td><td>0</td></tr><tr><td>CPUTIME</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>ALLTIME</td><td>3</td><td>3</td><td>6</td><td>3</td><td>4</td></tr><tr><td>STATE</td><td>ready</td><td>ready</td><td>ready</td><td>ready</td><td>read</td></tr></tbody></table><p>① 以时间片为单位调度运行；</p><p>② 每次总是从ALLTIME中不为0，且PRIORITY最大的进程调度运行一个时间片；</p><p>③ 上述进程运行后其优先数减3，再修改其CPUTIME和ALLTIME，重复②，③;</p><p>④ 直到所有进程的ALLTIME均变为0。</p><h3 id="5-书写实验报告"><a href="#5-书写实验报告" class="headerlink" title="5.书写实验报告"></a>5.书写实验报告</h3><p>① 实验题目；</p><p>② 程序中所用数据结构及说明；</p><p>③ 程序清单及描述；</p><p>④ 执行结果。</p><h2 id="二、算法实现："><a href="#二、算法实现：" class="headerlink" title="二、算法实现："></a>二、算法实现：</h2><h3 id="1-具体代码："><a href="#1-具体代码：" class="headerlink" title="1.具体代码："></a>1.具体代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//进程PCB结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> id, priority, cputime, alltime, state;<span class="comment">//state,结束-1，就绪0，运行1 </span></span><br><span class="line">&#125;pcb;</span><br><span class="line"></span><br><span class="line">pcb a[<span class="number">110</span>];<span class="comment">//定义进程队列 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(<span class="type">int</span> n, pcb a[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;----------------------------------------------\n&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;id  priority  cputime  alltime  state\n&quot;</span>);<span class="comment">//alltime,进程所需时间片 </span></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\t %d\t %d\t %d\t %d\n&quot;</span>, a[i].id, a[i].priority, a[i].cputime, a[i].alltime, a[i].state);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i].state == <span class="number">1</span>)</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;当前运行的进程id号：&quot;</span> &lt;&lt; a[i].id &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;当前的就绪进程id号：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i].state == <span class="number">0</span>)</span><br><span class="line">    cout &lt;&lt; a[i].id &lt;&lt; <span class="string">&quot; &quot;</span>;  </span><br><span class="line">&#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n----------------------------------------------\n\n&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">prior_sort</span><span class="params">(<span class="type">int</span> n, pcb a[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - <span class="number">1</span> - i; j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>( (a[j].priority &lt;= a[j + <span class="number">1</span>].priority))</span><br><span class="line">            <span class="built_in">swap</span>(a[j], a[j + <span class="number">1</span>]); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">0</span>].state != <span class="number">-1</span>) a[<span class="number">0</span>].state = <span class="number">1</span>;<span class="comment">//设为运行态 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">process_scheduling</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[<span class="number">0</span>].state == <span class="number">1</span>)<span class="comment">//运行态1，完成一次调度</span></span><br><span class="line">        &#123;</span><br><span class="line">        a[<span class="number">0</span>].priority -= <span class="number">3</span>;</span><br><span class="line">            a[<span class="number">0</span>].cputime += <span class="number">1</span>;</span><br><span class="line">            a[<span class="number">0</span>].alltime -= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[<span class="number">0</span>].alltime == <span class="number">0</span>) </span><br><span class="line">            &#123;</span><br><span class="line">a[<span class="number">0</span>].state= <span class="number">-1</span>;<span class="comment">//该进程结束(-1)</span></span><br><span class="line">m ++;</span><br><span class="line"><span class="built_in">swap</span>(a[<span class="number">0</span>], a[n - m]);</span><br><span class="line">&#125;</span><br><span class="line">            <span class="keyword">else</span> a[<span class="number">0</span>].state= <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">prior_sort</span>(n - m,a);</span><br><span class="line">        <span class="built_in">show</span>(n,a);</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">while</span>(a[<span class="number">0</span>].alltime != <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n; </span><br><span class="line"><span class="type">int</span> m = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入进程个数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请依次输入这&quot;</span> &lt;&lt; n &lt;&lt; <span class="string">&quot;个进程的ID号、进程优先数、已占用时间片、需要的时间片：&quot;</span>&lt;&lt; endl;<span class="comment">//初始化进程队列 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i].id &gt;&gt; a[i].priority &gt;&gt; a[i].cputime &gt;&gt; a[i].alltime;</span><br><span class="line">a[i].state = <span class="number">0</span>; <span class="comment">//进程状态（默认就绪态0）</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;进程队列初始状态如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">show</span>(n,a);</span><br><span class="line"><span class="built_in">prior_sort</span>(n,a); </span><br><span class="line"><span class="built_in">show</span>(n,a); <span class="comment">//进程第一次调度状况</span></span><br><span class="line"><span class="built_in">process_scheduling</span>(n, m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="2-运行截图："><a href="#2-运行截图：" class="headerlink" title="2.运行截图："></a>2.运行截图：</h3><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211161808150.jpg" alt="img-202211161808150"></p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211161808077.jpg" alt="img-202211161808077"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;操作系统实验-一-进程调度算法设计-动态优先数-时间片轮转法&quot;&gt;&lt;a href=&quot;#操作系统实验-一-进程调度算法设计-动态优先数-时间片轮转法&quot; class=&quot;headerlink&quot; title=&quot;操作系统实验(一)  进程调度算法设计(动态优先数+时间片轮转法</summary>
      
    
    
    
    <category term="操作系统实验" scheme="https://ariesfun.gitee.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%9E%E9%AA%8C/"/>
    
    
    <category term="C/C++" scheme="https://ariesfun.gitee.io/tags/C-C/"/>
    
    <category term="操作系统" scheme="https://ariesfun.gitee.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>大数据原理实验(一、二)  熟悉常用的Linux操作和Hadoop操作</title>
    <link href="https://ariesfun.gitee.io/posts/52d4.html"/>
    <id>https://ariesfun.gitee.io/posts/52d4.html</id>
    <published>2022-11-15T12:19:07.425Z</published>
    <updated>2022-12-01T16:50:18.702Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大数据原理实验-一、二-熟悉常用的Linux操作和Hadoop操作"><a href="#大数据原理实验-一、二-熟悉常用的Linux操作和Hadoop操作" class="headerlink" title="大数据原理实验(一、二) 熟悉常用的Linux操作和Hadoop操作"></a>大数据原理实验(一、二) 熟悉常用的Linux操作和Hadoop操作</h1><h2 id="实验步骤及操作截图"><a href="#实验步骤及操作截图" class="headerlink" title="实验步骤及操作截图"></a>实验步骤及操作截图</h2><h2 id="1、熟悉常用的Linux操作"><a href="#1、熟悉常用的Linux操作" class="headerlink" title="1、熟悉常用的Linux操作"></a>1、熟悉常用的Linux操作</h2><h3 id="1）cd命令：切换目录"><a href="#1）cd命令：切换目录" class="headerlink" title="1）cd命令：切换目录"></a>1）cd命令：切换目录</h3><p>（1） 切换到目录“/usr/local”</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211152009977.jpg" alt="img-202211152009977"></p><p>（2）切换到当前目录的上一级目录</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211152009972.jpg" alt="img-202211152009972"></p><p>（3）切换到当前登录Linux系统的用户的自己的主文件夹</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211152009966.jpg" alt="img-202211152009966"></p><h3 id="2）ls命令：查看文件与目录"><a href="#2）ls命令：查看文件与目录" class="headerlink" title="2）ls命令：查看文件与目录"></a>2）ls命令：查看文件与目录</h3><p>查看目录“/usr”下的所有文件和目录</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151918438.jpg" alt="img-202211151918438"></p><h3 id="3）mkdir命令：新建目录"><a href="#3）mkdir命令：新建目录" class="headerlink" title="3）mkdir命令：新建目录"></a>3）mkdir命令：新建目录</h3><p>（1）进入“/tmp”目录，创建一个名为“a”的目录，并查看“/tmp”目录下已经存在哪些目录</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151918758.jpg" alt="img-202211151918758"></p><p>（2）进入“/tmp”目录，创建目录“a1/a2/a3/a4”</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151923019.jpg" alt="img-202211151923019"></p><h3 id="4）rmdir命令：删除空的目录"><a href="#4）rmdir命令：删除空的目录" class="headerlink" title="4）rmdir命令：删除空的目录"></a>4）rmdir命令：删除空的目录</h3><p>（1）将上面创建的目录a（在“/tmp”目录下面）删除</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151923111.jpg" alt="img-202211151923111"></p><p>（2）删除上面创建的目录“a1/a2/a3/a4” （在“/tmp”目录下面），然后查看“/tmp”目录下面存在哪些目录<br><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151924393.jpg" alt="img-202211151924393"></p><p>只有空文件夹a4被删除了</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151924446.jpg" alt="img-20221115192444"></p><h3 id="5）cp命令：复制文件或目录"><a href="#5）cp命令：复制文件或目录" class="headerlink" title="5）cp命令：复制文件或目录"></a>5）cp命令：复制文件或目录</h3><p>（1）将当前用户的主文件夹下的文件.bashrc复制到目录“/usr”下，并重命名为bashrc1</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151924551.jpg" alt="img-202211151924551"></p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151927057.jpg" alt="img-202211151927057"></p><p>（2）在目录“/tmp”下新建目录test，再把这个目录复制到“/usr”目录下</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151927406.jpg" alt="img-202211151927406"></p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151927388.jpg" alt="img-202211151927388"></p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151928622.jpg" alt="img-202211151928622"></p><h3 id="6）mv命令：移动文件与目录，或更名"><a href="#6）mv命令：移动文件与目录，或更名" class="headerlink" title="6）mv命令：移动文件与目录，或更名"></a>6）mv命令：移动文件与目录，或更名</h3><p>（1）将“/usr”目录下的文件bashrc1移动到“/usr/test”目录下</p><p>（2）将“/usr”目录下的test目录重命名为test2</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151929621.jpg" alt="img-202211151929621"></p><h3 id="7）rm命令：移除文件或目录"><a href="#7）rm命令：移除文件或目录" class="headerlink" title="7）rm命令：移除文件或目录"></a>7）rm命令：移除文件或目录</h3><p>（1）将“/usr/test2”目录下的bashrc1文件删除</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151929844.jpg" alt="img-202211151929844"></p><p>（2）将“/usr”目录下的test2目录删除</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151930271.jpg" alt="img-202211151930271"></p><h3 id="8）cat命令：查看文件内容"><a href="#8）cat命令：查看文件内容" class="headerlink" title="8）cat命令：查看文件内容"></a>8）cat命令：查看文件内容</h3><p>查看当前用户主文件夹下的.bashrc文件内容</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151930959.jpg" alt="img-202211151930959"></p><h3 id="9）tac命令：反向查看文件内容"><a href="#9）tac命令：反向查看文件内容" class="headerlink" title="9）tac命令：反向查看文件内容"></a>9）tac命令：反向查看文件内容</h3><p>反向查看当前用户主文件夹下的.bashrc文件的内容</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151930904.jpg" alt="img-202211151930904"></p><h3 id="10）more命令：一页一页翻动查看"><a href="#10）more命令：一页一页翻动查看" class="headerlink" title="10）more命令：一页一页翻动查看"></a>10）more命令：一页一页翻动查看</h3><p>翻页查看当前用户主文件夹下的.bashrc文件的内容</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151930219.jpg" alt="img-202211151930219"></p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151931354.jpg" alt="img-202211151931354"></p><h3 id="11）head命令：取出前面几行"><a href="#11）head命令：取出前面几行" class="headerlink" title="11）head命令：取出前面几行"></a>11）head命令：取出前面几行</h3><p>（1）查看当前用户主文件夹下.bashrc文件内容前20行</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151931701.jpg" alt="img-202211151931701"></p><p>（2）查看当前用户主文件夹下.bashrc文件内容，后面50行不显示，只显示前面几行</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211201844534.jpg" alt="img-202211151844534"></p><h3 id="12）tail命令：取出后面几行"><a href="#12）tail命令：取出后面几行" class="headerlink" title="12）tail命令：取出后面几行"></a>12）tail命令：取出后面几行</h3><p>（1）查看当前用户主文件夹下.bashrc文件内容最后20行</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151931591.jpg" alt="img-202211151931591"></p><p>（2）查看当前用户主文件夹下.bashrc文件内容，并且只列出50行以后的数据</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151932794.jpg" alt="img-202211151932794"></p><h3 id="13）touch命令：修改文件时间或创建新文件"><a href="#13）touch命令：修改文件时间或创建新文件" class="headerlink" title="13）touch命令：修改文件时间或创建新文件"></a>13）touch命令：修改文件时间或创建新文件</h3><p>（1）在“/tmp”目录下创建一个空文件hello，并查看文件时间</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151932820.jpg" alt="img-202211151932820"></p><p>（2）修改hello文件，将文件时间整为5天前</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151932835.jpg" alt="img-202211151932835"></p><h3 id="14）chown命令：修改文件所有者权限"><a href="#14）chown命令：修改文件所有者权限" class="headerlink" title="14）chown命令：修改文件所有者权限"></a>14）chown命令：修改文件所有者权限</h3><p>将hello文件所有者改为root帐号，并查看属性</p><p>（PS：由上面的操作13可看出当前文件所有者为root，这里我们改为用户bigdata）</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151932777.jpg" alt="img-202211151932777"></p><h3 id="15）find命令：文件查找"><a href="#15）find命令：文件查找" class="headerlink" title="15）find命令：文件查找"></a>15）find命令：文件查找</h3><p>找出主文件夹下文件名为.bashrc的文件</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151933790.jpg" alt="img-202211151933790"></p><h3 id="16）tar命令：压缩命令"><a href="#16）tar命令：压缩命令" class="headerlink" title="16）tar命令：压缩命令"></a>16）tar命令：压缩命令</h3><p>（1）在根目录“/”下新建文件夹test，然后在根目录“/”下打包成test.tar.gz</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151935031.jpg" alt="img-202211151935031"></p><p>（2）把上面的test.tar.gz压缩包，解压缩到“/tmp”目录</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151935899.jpg" alt="img-202211151935899"></p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151935667.jpg" alt="img-202211151935667"></p><h3 id="17）grep命令：查找字符串"><a href="#17）grep命令：查找字符串" class="headerlink" title="17）grep命令：查找字符串"></a>17）grep命令：查找字符串</h3><p>从“～/.bashrc”文件中查找字符串’examples’</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151935982.jpg" alt="img-202211151935982"></p><h3 id="18）配置环境变量"><a href="#18）配置环境变量" class="headerlink" title="18）配置环境变量"></a>18）配置环境变量</h3><p>（1）请在“～/.bashrc”中设置，配置Java环境变量</p><p>需要使用vim命令</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151936523.jpg" alt="img-202211151936523"></p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151936227.jpg" alt="img-202211151936227" style="zoom:80%;" /><p>（2）查看JAVA_HOME变量的值</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151952705.jpg" alt="img-202211151952705"></p><h2 id="2、Hadoop操作"><a href="#2、Hadoop操作" class="headerlink" title="2、Hadoop操作"></a>2、Hadoop操作</h2><h3 id="（1）使用hadoop用户登录Linux系统，启动Hadoop（Hadoop的安装目录为“-usr-local-hadoop”），为hadoop用户在HDFS中创建用户目录“-user-hadoop”"><a href="#（1）使用hadoop用户登录Linux系统，启动Hadoop（Hadoop的安装目录为“-usr-local-hadoop”），为hadoop用户在HDFS中创建用户目录“-user-hadoop”" class="headerlink" title="（1）使用hadoop用户登录Linux系统，启动Hadoop（Hadoop的安装目录为“/usr/local/hadoop”），为hadoop用户在HDFS中创建用户目录“/user/hadoop”"></a>（1）使用hadoop用户登录Linux系统，启动Hadoop（Hadoop的安装目录为“/usr/local/hadoop”），为hadoop用户在HDFS中创建用户目录“/user/hadoop”</h3><h3 id="（2）接着在HDFS的目录“-user-hadoop”下，创建test文件夹，并查看文件列表"><a href="#（2）接着在HDFS的目录“-user-hadoop”下，创建test文件夹，并查看文件列表" class="headerlink" title="（2）接着在HDFS的目录“/user/hadoop”下，创建test文件夹，并查看文件列表"></a>（2）接着在HDFS的目录“/user/hadoop”下，创建test文件夹，并查看文件列表</h3><p>这里先切换到用户bigdata下再进行操作</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151937545.jpg" alt="img-202211151937545"></p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151941156.jpg" alt="img-202211151941156"></p><h3 id="（3）将Linux系统本地的“～-bashrc”文件上传到HDFS的test文件夹中，并查看test"><a href="#（3）将Linux系统本地的“～-bashrc”文件上传到HDFS的test文件夹中，并查看test" class="headerlink" title="（3）将Linux系统本地的“～/.bashrc”文件上传到HDFS的test文件夹中，并查看test"></a>（3）将Linux系统本地的“～/.bashrc”文件上传到HDFS的test文件夹中，并查看test</h3><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151943507.jpg" alt="img-202211151943507"></p><h3 id="（4）将HDFS文件夹test复制到Linux系统本地文件系统的“-usr-local-hadoop”目录下"><a href="#（4）将HDFS文件夹test复制到Linux系统本地文件系统的“-usr-local-hadoop”目录下" class="headerlink" title="（4）将HDFS文件夹test复制到Linux系统本地文件系统的“/usr/local/hadoop”目录下"></a>（4）将HDFS文件夹test复制到Linux系统本地文件系统的“/usr/local/hadoop”目录下</h3><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211151943207.jpg" alt="img-202211151943207"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;大数据原理实验-一、二-熟悉常用的Linux操作和Hadoop操作&quot;&gt;&lt;a href=&quot;#大数据原理实验-一、二-熟悉常用的Linux操作和Hadoop操作&quot; class=&quot;headerlink&quot; title=&quot;大数据原理实验(一、二) 熟悉常用的Linux操作和</summary>
      
    
    
    
    <category term="大数据原理实验" scheme="https://ariesfun.gitee.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C/"/>
    
    
    <category term="Linux" scheme="https://ariesfun.gitee.io/tags/Linux/"/>
    
    <category term="Hadoop" scheme="https://ariesfun.gitee.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>MySQL案例3 MySQL实验(二)数据库查询</title>
    <link href="https://ariesfun.gitee.io/posts/a74d.html"/>
    <id>https://ariesfun.gitee.io/posts/a74d.html</id>
    <published>2022-10-23T13:49:14.458Z</published>
    <updated>2022-10-23T13:50:32.622Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL案例3-MySQL实验-二-数据库查询"><a href="#MySQL案例3-MySQL实验-二-数据库查询" class="headerlink" title="MySQL案例3 MySQL实验(二)数据库查询"></a>MySQL案例3 MySQL实验(二)数据库查询</h1><h4 id="考核内容及实验目的："><a href="#考核内容及实验目的：" class="headerlink" title="考核内容及实验目的："></a>考核内容及实验目的：</h4><h4 id="使用SQL语句进行查询操作，掌握单表查询、多表查询及嵌套查询操作。"><a href="#使用SQL语句进行查询操作，掌握单表查询、多表查询及嵌套查询操作。" class="headerlink" title="使用SQL语句进行查询操作，掌握单表查询、多表查询及嵌套查询操作。"></a>使用SQL语句进行查询操作，掌握单表查询、多表查询及嵌套查询操作。</h4><h2 id="一、实验描述"><a href="#一、实验描述" class="headerlink" title="一、实验描述"></a>一、实验描述</h2><p>1、导入一个外部数据库文件(world.sql)到Navicat图形化管理软件中,并进行进行单表查询、多表查询及嵌套查询操作。数据库world包含了country、countryLanguag、city三张表，涵盖了全世界的国家、国家语言和城市的相关信息。</p><p>下图是world数据库中的部分表信息</p><ul><li><p>country表</p><p>  <img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210232145728.jpg" alt="Snipaste_2022-10-23_19-41-07"></p></li></ul><ul><li><p>countryLanguage表</p>  <img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210232145724.jpg" alt="Snipaste_2022-10-23_19-41-40" style="zoom:67%;" /></li></ul><ul><li>city表</li></ul><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210232145046.jpg" alt="Snipaste_2022-10-23_19-40-31" style="zoom:67%;" /><p>2、单表查询</p><p>（1）查询全世界使用中文（<code>Language </code>= ‘Chinese’）的国家的个数。</p><p>（2）以你家乡地级市名称为条件，查询显示你家乡地级市的名称和人口（Population）以及所属的省份名称（Disrtict）。注意数据库中个别城市的拼写与拼音有所区别，例如北京是Peking，西安是 Xi´an，陕西是Shaanxi。</p><p>（3）查询新疆（Xinxiang）的各市平均人口。（提示:avg()函数）</p><p>（4）查询显示世界七大洲（continent）的名称和对应各洲所拥有的国家数量（提示:group by），并用降序排序（提示:order by  <code>字段名</code> desc为降序）。</p><p>（5）查询平均国家人口大于一千万的洲（例如亚洲总人数为37亿，国家有51个，除下来平均每个国家人口为七千多万符合条件）的名称和对应该洲的总人口。（提示：avg（）函数、group by 和having字句）。</p><p>3、多表查询</p><p>（1）查询全世界使用中文为官方语言（IsOfficial=’T’ ）的国家名称（不是代码）。</p><p>（2）已知朝鲜名称为North Korea查找朝鲜国家使用的语言。</p><p>4、嵌套查询</p><p>（1）查询北美洲North America人口最多的国家名称和人口数量。</p><p>（2）查询没有一个城市人口超过1000人的国家名称和该国家人口。</p><h2 id="二、上机操作"><a href="#二、上机操作" class="headerlink" title="二、上机操作"></a>二、上机操作</h2><h3 id="0、实验环境"><a href="#0、实验环境" class="headerlink" title="0、实验环境"></a>0、实验环境</h3><ul><li><p>硬件平台：一台笔电，操作系统为Win10pro 64位</p></li><li><p>软件环境：</p><p>  数据库Server版本，8.0.30 MySQL Community Server</p><p>  图形化管理工具，Navicat Premium 15.0.25</p></li></ul><h3 id="1、用到的SQL语句"><a href="#1、用到的SQL语句" class="headerlink" title="1、用到的SQL语句"></a>1、用到的SQL语句</h3><ul><li>单表查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><ul><li>多表查询<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><ul><li>嵌套查询<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2、完整的SQL代码实现"><a href="#2、完整的SQL代码实现" class="headerlink" title="2、完整的SQL代码实现"></a>2、完整的SQL代码实现</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1、单表查询</span></span><br><span class="line"><span class="comment">-- 查询全世界使用中文的国家的个数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(CountryCode) <span class="keyword">from</span> countrylanguage <span class="keyword">where</span> `<span class="keyword">Language</span>` <span class="operator">=</span> <span class="string">&#x27;Chinese&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询显示你家乡地级市的名称和人口（Population）以及所属的省份名称（Disrtict）</span></span><br><span class="line"><span class="keyword">select</span> Name,Population,District <span class="keyword">from</span> city <span class="keyword">where</span> `Name` <span class="operator">=</span> <span class="string">&#x27;Ankang&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询新疆（Xinxiang）的各市平均人口</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(Population) <span class="keyword">from</span> city <span class="keyword">where</span> District <span class="operator">=</span> <span class="string">&#x27;Xinxiang&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询显示世界七大洲（Continent）的名称和对应各洲所拥有的国家数量，并用降序排序</span></span><br><span class="line"><span class="keyword">select</span> Continent,<span class="built_in">count</span>(Code) <span class="keyword">from</span> country <span class="keyword">group</span> <span class="keyword">by</span> Continent <span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">count</span>(Code) <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询平均国家人口大于一千万的洲的名称和对应该洲的总人口</span></span><br><span class="line"><span class="keyword">select</span> Continent,<span class="built_in">avg</span>(Population),<span class="built_in">sum</span>(Population) <span class="keyword">from</span> country <span class="keyword">group</span> <span class="keyword">by</span> Continent <span class="keyword">having</span> <span class="built_in">avg</span>(Population) <span class="operator">&gt;</span> <span class="number">10000000</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2、多表查询</span></span><br><span class="line"><span class="comment">-- 查询全世界使用中文为官方语言的国家名称，使用等值连接</span></span><br><span class="line"><span class="keyword">select</span> Name <span class="keyword">from</span> country co,countrylanguage col <span class="keyword">where</span> co.Code <span class="operator">=</span> col.CountryCode <span class="keyword">and</span> `<span class="keyword">Language</span>` <span class="operator">=</span> <span class="string">&#x27;Chinese&#x27;</span> <span class="keyword">and</span> IsOfficial <span class="operator">=</span> <span class="string">&#x27;T&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> Name,<span class="keyword">Language</span> <span class="keyword">from</span> country co,countrylanguage col <span class="keyword">where</span> co.Code <span class="operator">=</span> col.CountryCode <span class="keyword">and</span> `Name` <span class="operator">=</span> <span class="string">&#x27;North Korea&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3、嵌套查询</span></span><br><span class="line"><span class="comment">-- 查询北美洲North America人口最多的国家名称和人口数量</span></span><br><span class="line"><span class="comment">-- 子查询是北美洲最多的人口数，外层查询是子查询对应的国家和人口</span></span><br><span class="line"><span class="comment">-- select max(Population) from country where `Continent` = &#x27;North America&#x27;;</span></span><br><span class="line"><span class="keyword">select</span> Name,Population <span class="keyword">from</span> country <span class="keyword">where</span> Population <span class="operator">=</span> <span class="keyword">any</span> (<span class="keyword">select</span> <span class="built_in">max</span>(Population) <span class="keyword">from</span> country <span class="keyword">where</span> `Continent` <span class="operator">=</span> <span class="string">&#x27;North America&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询没有一个城市人口超过1000人的国家名称和该国家人口</span></span><br><span class="line"><span class="comment">-- 子查询：select distinct city.CountryCode from city where city.`Population` &lt; 1000;</span></span><br><span class="line"><span class="keyword">select</span> Name,Population <span class="keyword">from</span> country <span class="keyword">where</span> country.`Code` <span class="operator">=</span> <span class="keyword">any</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> city.`CountryCode` <span class="keyword">from</span> city <span class="keyword">where</span> city.`Population` <span class="operator">&lt;</span> <span class="number">1000</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MySQL案例3-MySQL实验-二-数据库查询&quot;&gt;&lt;a href=&quot;#MySQL案例3-MySQL实验-二-数据库查询&quot; class=&quot;headerlink&quot; title=&quot;MySQL案例3 MySQL实验(二)数据库查询&quot;&gt;&lt;/a&gt;MySQL案例3 MySQL</summary>
      
    
    
    
    <category term="MySQL数据库" scheme="https://ariesfun.gitee.io/categories/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://ariesfun.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>AcWing算法基础课 基础算法1</title>
    <link href="https://ariesfun.gitee.io/posts/61475.html"/>
    <id>https://ariesfun.gitee.io/posts/61475.html</id>
    <published>2022-10-16T14:30:00.000Z</published>
    <updated>2022-10-17T08:20:35.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、基础算法"><a href="#一、基础算法" class="headerlink" title="一、基础算法"></a>一、基础算法</h1><h3 id="基础算法内容目录"><a href="#基础算法内容目录" class="headerlink" title="基础算法内容目录"></a>基础算法内容目录</h3><p><strong>排序</strong><br><strong>二分</strong><br><strong>高精度</strong><br><strong>前缀和与差分</strong><br><strong>双指针算法</strong><br><strong>位运算</strong><br><strong>离散化</strong><br><strong>区间合并</strong></p><h3 id="1、排序"><a href="#1、排序" class="headerlink" title="1、排序"></a>1、排序</h3><blockquote><p>快速排序</p></blockquote><ul><li><p>问题描述</p><h4 id="AcWing-785-快速排序"><a href="#AcWing-785-快速排序" class="headerlink" title="AcWing 785. 快速排序"></a>AcWing 785. 快速排序</h4></li></ul><p>给定你一个长度为 n 的整数数列。</p><p>  请你使用快速排序对这个数列按照从小到大进行排序。</p><p>  并将排好序的数列按顺序输出。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入共两行，第一行包含整数 n。</p><p>  第二行包含 n 个整数（所有整数均在 1∼1091∼109 范围内），表示整个数列。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>  输出共一行，包含 n 个整数，表示排好序的数列。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>  1≤n≤1000001≤n≤100000</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">3 1 2 4 5</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure><ul><li>题解</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010<span class="comment">//定义数据范围 </span></span></span><br><span class="line"><span class="type">int</span> q[N]; </span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> q[],<span class="type">int</span> l,<span class="type">int</span> r)</span><span class="comment">//快速排序模板 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span>;<span class="comment">//判断边界，指针已穿过，此时区间有0或1个数直接退出排序 </span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x = q[(l+r)/<span class="number">2</span>],i = l - <span class="number">1</span>,j = r + <span class="number">1</span>;<span class="comment">//取中间点为分界点，初始化指针指向边界两侧，保证循环时指向正真边界 </span></span><br><span class="line"><span class="keyword">while</span> (i &lt; j)<span class="comment">//调整左右两个区间 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span> i++ ;<span class="keyword">while</span>(q[i] &lt; x);</span><br><span class="line"><span class="keyword">do</span> j-- ;<span class="keyword">while</span>(q[j] &gt; x);</span><br><span class="line"><span class="keyword">if</span>(i &lt; j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t = q[i];</span><br><span class="line">            q[i] = q[j];</span><br><span class="line">            q[j] = t;</span><br><span class="line">        &#125;<span class="comment">//此时i,j已停下来，交换它们指向的数 </span></span><br><span class="line">&#125;</span><br><span class="line">quick_sort(q,l,j);<span class="comment">//再递归左右两段，直到有序 </span></span><br><span class="line">quick_sort(q,j+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);<span class="comment">//读入排序个数 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);<span class="comment">//存入数组q[i] </span></span><br><span class="line">quick_sort(q,<span class="number">0</span>,n<span class="number">-1</span>);<span class="comment">//调用快排，传入数据及左右边界 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>归并排序</p></blockquote><ul><li><p>问题描述</p><h4 id="AcWing-787-归并排序"><a href="#AcWing-787-归并排序" class="headerlink" title="AcWing 787. 归并排序"></a>AcWing 787. 归并排序</h4><p>给定你一个长度为 nn 的整数数列。</p><p>请你使用归并排序对这个数列按照从小到大进行排序。</p><p>并将排好序的数列按顺序输出。</p><h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入共两行，第一行包含整数 nn。</p><p>第二行包含 nn 个整数（所有整数均在 1∼1091∼109 范围内），表示整个数列。</p><h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出共一行，包含 nn 个整数，表示排好序的数列。</p><h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤1000001≤n≤100000</p><h4 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">3 1 2 4 5</span><br></pre></td></tr></table></figure><h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure></li></ul><ul><li>题解<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="type">int</span> q[N],temp[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> q[],<span class="type">int</span> l,<span class="type">int</span> r)</span><span class="comment">//归并排序模板 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) <span class="keyword">return</span>;<span class="comment">//当前区间有0或1个数，退出排序 </span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> mid = (l + r)/<span class="number">2</span>;<span class="comment">//取区间中点 </span></span><br><span class="line"></span><br><span class="line">merge_sort(q,l,mid),merge_sort(q,mid+<span class="number">1</span>,r);<span class="comment">//递归排序左右两边 </span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>,i = l,j = mid + <span class="number">1</span>;<span class="comment">//初始化左右起点i,j </span></span><br><span class="line"><span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(q[i] &lt;= q[j]) temp[k++] = q[i++];<span class="comment">//每次把小的数存入辅助数组temp </span></span><br><span class="line"><span class="keyword">else</span> temp[k++] = q[j++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(i &lt;= mid) temp[k++] = q[i++];<span class="comment">//左边没循环完时，直接复制给temp </span></span><br><span class="line"><span class="keyword">while</span>(j &lt;= r) temp[k++] = q[j++];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = l,j = <span class="number">0</span>;i &lt;= r;i++,j++) q[i] = temp[j];<span class="comment">//这里取最后一次排好序的temp值，把辅助数组存回原数组 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n; </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line"></span><br><span class="line">merge_sort(q,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2、二分"><a href="#2、二分" class="headerlink" title="2、二分"></a>2、二分</h3><blockquote><p>整数二分算法</p></blockquote><ul><li><p>问题描述</p><h4 id="AcWing-789-数的范围"><a href="#AcWing-789-数的范围" class="headerlink" title="AcWing 789. 数的范围"></a>AcWing 789. 数的范围</h4><p>  给定一个按照升序排列的长度为 n 的整数数组，以及 q 个查询。</p><p>  对于每个查询，返回一个元素 k 的起始位置和终止位置（位置从 0 开始计数）。</p><p>  如果数组中不存在该元素，则返回 <code>-1 -1</code>。</p><h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>  第一行包含整数 n 和 q，表示数组长度和询问个数。</p><p>  第二行包含 n 个整数（均在 1∼100001∼10000 范围内），表示完整数组。</p><p>  接下来 q 行，每行包含一个整数 k，表示一个询问元素。</p><h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>  共 qq 行，每行包含两个整数，表示所求元素的起始位置和终止位置。</p><p>  如果数组中不存在该元素，则返回 <code>-1 -1</code>。</p><h4 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a>数据范围</h4><p>  1≤n≤1000001≤n≤100000<br>  1≤q≤100001≤q≤10000<br>  1≤k≤100001≤k≤10000</p><h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">6 3</span><br><span class="line">1 2 2 3 3 4</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h4 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h4>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br><span class="line">5 5</span><br><span class="line">-1 -1</span><br></pre></td></tr></table></figure></li></ul><ul><li>题解<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="type">int</span> n,q;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        <span class="type">int</span> l = <span class="number">0</span>, r = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[mid] &gt;= x) r = mid;</span><br><span class="line">            <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[l] != x)   <span class="built_in">printf</span>(<span class="string">&quot;-1 -1\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,l);</span><br><span class="line">            <span class="type">int</span> l = <span class="number">0</span>,r = n - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(l &lt; r)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> mid = (l + r + <span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(a[mid] &lt;= x) l = mid;</span><br><span class="line">                <span class="keyword">else</span> r = mid <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d \n&quot;</span>,l);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>浮点数二分算法</p></blockquote><ul><li><p>问题描述</p><h4 id="AcWing-790-数的三次方根"><a href="#AcWing-790-数的三次方根" class="headerlink" title="AcWing 790. 数的三次方根"></a>AcWing 790. 数的三次方根</h4><p>  给定一个浮点数 n，求它的三次方根。</p><h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>  共一行，包含一个浮点数 n。</p><h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>  共一行，包含一个浮点数，表示问题的解。</p><p>  注意，结果保留 6 位小数。</p><h4 id="数据范围-3"><a href="#数据范围-3" class="headerlink" title="数据范围"></a>数据范围</h4><p>  −10000≤n≤10000−10000≤n≤10000</p><h4 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h4>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1000.00</span><br></pre></td></tr></table></figure><h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.000000</span><br></pre></td></tr></table></figure></li></ul><ul><li>题解<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、基础算法&quot;&gt;&lt;a href=&quot;#一、基础算法&quot; class=&quot;headerlink&quot; title=&quot;一、基础算法&quot;&gt;&lt;/a&gt;一、基础算法&lt;/h1&gt;&lt;h3 id=&quot;基础算法内容目录&quot;&gt;&lt;a href=&quot;#基础算法内容目录&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="AcWing算法基础课" scheme="https://ariesfun.gitee.io/categories/AcWing%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/"/>
    
    
    <category term="C/C++" scheme="https://ariesfun.gitee.io/tags/C-C/"/>
    
    <category term="数据结构与算法" scheme="https://ariesfun.gitee.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    <category term="AcWing" scheme="https://ariesfun.gitee.io/tags/AcWing/"/>
    
  </entry>
  
  <entry>
    <title>MySQL案例2 MySQL实验(一)数据库定义与操作</title>
    <link href="https://ariesfun.gitee.io/posts/28384.html"/>
    <id>https://ariesfun.gitee.io/posts/28384.html</id>
    <published>2022-10-14T11:26:59.740Z</published>
    <updated>2022-10-23T11:27:41.778Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL案例2-MySQL实验-一-数据库定义与操作"><a href="#MySQL案例2-MySQL实验-一-数据库定义与操作" class="headerlink" title="MySQL案例2 MySQL实验(一)数据库定义与操作"></a>MySQL案例2 MySQL实验(一)数据库定义与操作</h1><h4 id="考核内容及实验目的："><a href="#考核内容及实验目的：" class="headerlink" title="考核内容及实验目的："></a>考核内容及实验目的：</h4><h4 id="使用SQL语句创建、修改、删除数据库及基本表。掌握表级、列级完整性约束。"><a href="#使用SQL语句创建、修改、删除数据库及基本表。掌握表级、列级完整性约束。" class="headerlink" title="使用SQL语句创建、修改、删除数据库及基本表。掌握表级、列级完整性约束。"></a>使用SQL语句创建、修改、删除数据库及基本表。掌握表级、列级完整性约束。</h4><h2 id="一、实验描述"><a href="#一、实验描述" class="headerlink" title="一、实验描述"></a>一、实验描述</h2><p>1、创建数据库hdbase，并创建三张表，分别是country、countryLanguage、city。</p><p>表信息如下：</p><ul><li>country表</li></ul><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210141733916.png" alt="img_202210141733916" style="zoom: 67%;" /><ul><li>countryLanguage表</li></ul><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210141733490.png" alt="img_202210141733490" style="zoom:67%;" /><ul><li>city表</li></ul><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210141733282.png" alt="img_202210141733282" style="zoom:67%;" /><p>2、定义表中的主码、外键、约束、数据类型。</p><p>（1）country表主码为Code，countryLanguage表中主码为countryCode、Language，city表主码为ID。<br>（2）countryLanguage表和city表，其表中的CountryCode字段都是country表中的Code字段的外键。<br>（3）country表和city表的Name字段列级约束均为非空、唯一。<br>（4）CountryLanguage中isOffice字段采用枚举类型，要求：isOffice enum(‘T’,’F’)。</p><p>3、对表中数据进行更新操作。</p><p>（1）修改city表中Population字段属性为bigint、not null。<br>（2）删除表country中的Surfacearea字段。<br>（3）插入Visit字段到表city中，枚举类型enum，Y代表去过，N代表没去过。默认值为N.<br>（4）删除countryLanguage表中的外键约束。<br>（5）给countryLanguage表Language字段加普通索引。</p><h2 id="二、上机操作"><a href="#二、上机操作" class="headerlink" title="二、上机操作"></a>二、上机操作</h2><h3 id="0、实验环境"><a href="#0、实验环境" class="headerlink" title="0、实验环境"></a>0、实验环境</h3><ul><li><p>硬件平台：一台笔电，操作系统为Win10pro 64位</p></li><li><p>软件环境：</p><p>  数据库Server版本，8.0.30 MySQL Community Server</p><p>  图形化管理工具，Navicat Premium 15.0.25</p></li></ul><h3 id="1、用到的SQL语句"><a href="#1、用到的SQL语句" class="headerlink" title="1、用到的SQL语句"></a>1、用到的SQL语句</h3><ul><li>创建数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库hdbase</span></span><br><span class="line"><span class="keyword">create</span> database hdbase;</span><br></pre></td></tr></table></figure><ul><li>创建三张表，并定义约束<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表country,countryLanguage,city</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `hdbase`.`country`(</span><br><span class="line">    Code <span class="type">char</span>(<span class="number">3</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    Name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span>,</span><br><span class="line">    Continent <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    Surfacearea <span class="keyword">double</span>(<span class="number">9</span>,<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="keyword">primary</span> key(Code)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `hdbase`.`countryLanguage`(</span><br><span class="line">    CountryCode <span class="type">char</span>(<span class="number">3</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="keyword">Language</span> <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    IsOffical enum(<span class="string">&#x27;T&#x27;</span>,<span class="string">&#x27;F&#x27;</span>) <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">-- 字段采用枚举类型,enum(&#x27;T&#x27;,&#x27;F&#x27;)</span></span><br><span class="line">    Percentage <span class="keyword">double</span>(<span class="number">3</span>,<span class="number">1</span>) <span class="keyword">not</span> <span class="keyword">null</span>, </span><br><span class="line">    <span class="keyword">constraint</span> fk_countryLanguage <span class="keyword">foreign</span> key(CountryCode) <span class="keyword">references</span> country(Code), <span class="comment">-- 定义外键约束,并自定义约束名</span></span><br><span class="line">    <span class="keyword">primary</span> key(CountryCode,<span class="keyword">Language</span>) <span class="comment">-- 联合主键</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `hdbase`.`city`(</span><br><span class="line">    ID <span class="type">char</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    Name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span>,</span><br><span class="line">    CountryCode <span class="type">char</span>(<span class="number">3</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    District <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    Population <span class="type">int</span> unsigned,</span><br><span class="line">    <span class="keyword">constraint</span> fk_city <span class="keyword">foreign</span> key(CountryCode) <span class="keyword">references</span> country(Code), <span class="comment">-- 定义外键约束</span></span><br><span class="line">    <span class="keyword">primary</span> key(ID)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul><ul><li>批量插入数据<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 对三张表中插入部分数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> country (Code,Name,Continent,Surfacearea) <span class="keyword">values</span> (<span class="string">&#x27;AUS&#x27;</span>,<span class="string">&#x27;Australia&#x27;</span>,<span class="string">&#x27;Oceania&#x27;</span>,<span class="string">&#x27;7741220.00&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;China&#x27;</span>,<span class="string">&#x27;Asia&#x27;</span>,<span class="string">&#x27;9572900.00&#x27;</span>),(<span class="string">&#x27;DEU&#x27;</span>,<span class="string">&#x27;Germany&#x27;</span>,<span class="string">&#x27;Europe&#x27;</span>,<span class="string">&#x27;357022.00&#x27;</span>),(<span class="string">&#x27;USA&#x27;</span>,<span class="string">&#x27;United States&#x27;</span>,<span class="string">&#x27;North America&#x27;</span>,<span class="string">&#x27;9363520.00&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> countryLanguage (CountryCode,<span class="keyword">Language</span>, IsOffical,Percentage) <span class="keyword">values</span> (<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;Chinese&#x27;</span>,<span class="string">&#x27;T&#x27;</span>,<span class="string">&#x27;92.0&#x27;</span>),(<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;Tibetan&#x27;</span>,<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;0.4&#x27;</span>),(<span class="string">&#x27;USA&#x27;</span>,<span class="string">&#x27;English&#x27;</span>,<span class="string">&#x27;T&#x27;</span>,<span class="string">&#x27;98&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> city (ID,Name,CountryCode,District,Population) <span class="keyword">values</span>  (<span class="string">&#x27;1901&#x27;</span>,<span class="string">&#x27;Xi`an&#x27;</span>,<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;Shaanxi&#x27;</span>,<span class="string">&#x27;2761400&#x27;</span>),(<span class="string">&#x27;1990&#x27;</span>,<span class="string">&#x27;Xianyang&#x27;</span>,<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;Shaanxi&#x27;</span>,<span class="string">&#x27;352125&#x27;</span>),(<span class="string">&#x27;1996&#x27;</span>,<span class="string">&#x27;Baoji&#x27;</span>,<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;Shaanxi&#x27;</span>,<span class="string">&#x27;337765&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ul><ul><li>数据更新操作<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--（1）修改city表中Population字段属性为bigint、not null，即修改列属性</span></span><br><span class="line"><span class="comment">-- 给city表修改列属性</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> city modify Population <span class="type">bigint</span>;</span><br><span class="line"><span class="comment">-- 添加非空属性</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> city modify <span class="keyword">column</span> Population <span class="type">bigint</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--（2）删除country表中的Surfacearea字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> country dorp Surfacearea;</span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）插入Visit新字段到city表中，枚举类型enum，Y代表去过，N代表没去过，默认值为N</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> city <span class="keyword">add</span> (Visit enum(<span class="string">&#x27;Y&#x27;</span>,<span class="string">&#x27;N&#x27;</span>) <span class="keyword">default</span> <span class="string">&#x27;N&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--（4）删除countryLanguage表中的外键约束</span></span><br><span class="line"><span class="comment">-- 先要知道countryLanguage表中的外键约束名,在前面创建表时我定义外键约束名为fk_countryLanguage</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> countryLanguage <span class="keyword">drop</span> <span class="keyword">foreign</span> key fk_countryLanguage;</span><br><span class="line"></span><br><span class="line"><span class="comment">--（5）给countryLanguage表的Language字段加普通索引</span></span><br><span class="line"><span class="comment">-- 给表中字段添加普通索引的语法：</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">add</span> index index_name (<span class="keyword">column</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> countryLanguage <span class="keyword">add</span> index index_Language(<span class="keyword">Language</span>);</span><br></pre></td></tr></table></figure><h3 id="2、完整的SQL代码实现"><a href="#2、完整的SQL代码实现" class="headerlink" title="2、完整的SQL代码实现"></a>2、完整的SQL代码实现</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一、创建数据库</span></span><br><span class="line"><span class="keyword">create</span> database hdbase;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 二、创建三张表,并定义约束</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `hdbase`.`country`(</span><br><span class="line">Code <span class="type">char</span>(<span class="number">3</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">Name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span>,</span><br><span class="line">Continent <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">Surfacearea <span class="keyword">double</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="keyword">primary</span> key(Code)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `hdbase`.`countryLanguage`(</span><br><span class="line">CountryCode <span class="type">char</span>(<span class="number">3</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="keyword">Language</span> <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">isOffical enum(<span class="string">&#x27;T&#x27;</span>,<span class="string">&#x27;F&#x27;</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">Percentage <span class="keyword">double</span>(<span class="number">3</span>,<span class="number">1</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="keyword">constraint</span> fk_countryLanguage <span class="keyword">foreign</span> key (CountryCode) <span class="keyword">references</span> country(Code),</span><br><span class="line"><span class="keyword">primary</span> key(CountryCode,<span class="keyword">Language</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `hdbase`.`city`(</span><br><span class="line">ID <span class="type">char</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">Name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span>,</span><br><span class="line">CountryCode <span class="type">char</span>(<span class="number">3</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">District <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">Population <span class="type">int</span> unsigned <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="keyword">constraint</span> fk_city <span class="keyword">foreign</span> key (CountryCode) <span class="keyword">references</span> country(Code),</span><br><span class="line"><span class="keyword">primary</span> key(ID)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 三、批量插入数据 </span></span><br><span class="line"><span class="comment">-- 国家表</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> country (Code,Name,Continent,Surfacearea) <span class="keyword">values</span> (<span class="string">&#x27;AUS&#x27;</span>,<span class="string">&#x27;Australia&#x27;</span>,<span class="string">&#x27;Oceania&#x27;</span>,<span class="string">&#x27;7741220.00&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;China&#x27;</span>,<span class="string">&#x27;Asia&#x27;</span>,<span class="string">&#x27;9572900.00&#x27;</span>),(<span class="string">&#x27;DEU&#x27;</span>,<span class="string">&#x27;Germany&#x27;</span>,<span class="string">&#x27;Europe&#x27;</span>,<span class="string">&#x27;357022.00&#x27;</span>),(<span class="string">&#x27;USA&#x27;</span>,<span class="string">&#x27;United States&#x27;</span>,<span class="string">&#x27;North America&#x27;</span>,<span class="string">&#x27;9363520.00&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> country; </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 国家语言表</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> countryLanguage (CountryCode,<span class="keyword">Language</span>,isOffical,Percentage) <span class="keyword">values</span> (<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;Chinese&#x27;</span>,<span class="string">&#x27;T&#x27;</span>,<span class="string">&#x27;92.0&#x27;</span>),(<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;Tibetan&#x27;</span>,<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;0.4&#x27;</span>),(<span class="string">&#x27;USA&#x27;</span>,<span class="string">&#x27;English&#x27;</span>,<span class="string">&#x27;T&#x27;</span>,<span class="string">&#x27;98&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> countryLanguage; </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 城市表</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> city (ID,Name,CountryCode,District,Population) <span class="keyword">values</span> (<span class="string">&#x27;1901&#x27;</span>,<span class="string">&#x27;Xi`an&#x27;</span>,<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;Shaanxi&#x27;</span>,<span class="string">&#x27;2761400&#x27;</span>),(<span class="string">&#x27;1990&#x27;</span>,<span class="string">&#x27;Xianyang&#x27;</span>,<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;Shaanxi&#x27;</span>,<span class="string">&#x27;352125&#x27;</span>),(<span class="string">&#x27;1996&#x27;</span>,<span class="string">&#x27;Baoji&#x27;</span>,<span class="string">&#x27;CHN&#x27;</span>,<span class="string">&#x27;Shaanxi&#x27;</span>,<span class="string">&#x27;337765&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> city; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 四、修改表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 给city表修改列属性</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> city modify Population <span class="type">bigint</span>;</span><br><span class="line"><span class="comment">-- 添加非空属性</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> city modify <span class="keyword">column</span> Population <span class="type">bigint</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">-- 查看表结构</span></span><br><span class="line"><span class="keyword">desc</span> city;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除列（字段）</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> country <span class="keyword">drop</span> Surfacearea;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> country; </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入新字段到city表</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> city <span class="keyword">add</span> (Visit enum(<span class="string">&#x27;Y&#x27;</span>,<span class="string">&#x27;N&#x27;</span>)  <span class="keyword">default</span> <span class="string">&#x27;Y&#x27;</span>);</span><br><span class="line"><span class="comment">-- 查看表结构</span></span><br><span class="line"><span class="keyword">desc</span> city;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> city; </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表中的外键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> countryLanguage <span class="keyword">drop</span> <span class="keyword">foreign</span> key fk_countryLanguage;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加普通索引</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> countryLanguage <span class="keyword">add</span> index index_name(<span class="keyword">Language</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MySQL案例2-MySQL实验-一-数据库定义与操作&quot;&gt;&lt;a href=&quot;#MySQL案例2-MySQL实验-一-数据库定义与操作&quot; class=&quot;headerlink&quot; title=&quot;MySQL案例2 MySQL实验(一)数据库定义与操作&quot;&gt;&lt;/a&gt;MySQL</summary>
      
    
    
    
    <category term="MySQL数据库" scheme="https://ariesfun.gitee.io/categories/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://ariesfun.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL案例1 MySQL的简单应用及用Java操作</title>
    <link href="https://ariesfun.gitee.io/posts/3494.html"/>
    <id>https://ariesfun.gitee.io/posts/3494.html</id>
    <published>2022-10-07T04:14:38.103Z</published>
    <updated>2022-12-13T03:44:22.127Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL案例1-MySQL的简单应用及用Java操作"><a href="#MySQL案例1-MySQL的简单应用及用Java操作" class="headerlink" title="MySQL案例1 MySQL的简单应用及用Java操作"></a>MySQL案例1 MySQL的简单应用及用Java操作</h1><h2 id="一、具体案例描述"><a href="#一、具体案例描述" class="headerlink" title="一、具体案例描述"></a>一、具体案例描述</h2><p>MySQL数据库操作：</p><p>学生表student信息如下，</p><table><thead><tr><th>Name</th><th>English</th><th>Math</th><th>Computer</th></tr></thead><tbody><tr><td>zhangsan</td><td>69</td><td>86</td><td>77</td></tr><tr><td>lisi</td><td>55</td><td>100</td><td>88</td></tr></tbody></table><ul><li><p>根据上面给出的student表，在MySQL数据库中完成以下操作：</p><p>  （1）在MySQL中创建student表，并录入数据。</p><p>  （2）用SQL语句输出student表中的所有记录。</p><p>  （3）查询zhangsan的Computer成绩。</p><p>  （4）修改lisi的Math成绩，改为95。</p></li></ul><ul><li><p>根据上面已经设计出的student表，使用MySQL的Java客户端编程实现以下操作：</p><p>  （1）向student表中添加如下所示的一条记录。</p><table><thead><tr><th>Name</th><th>English</th><th>Math</th><th>Computer</th></tr></thead><tbody><tr><td>scofield</td><td>45</td><td>89</td><td>100</td></tr></tbody></table><p>  （2）获取scofield的English成绩信息。</p></li></ul><h2 id="二、上机操作"><a href="#二、上机操作" class="headerlink" title="二、上机操作"></a>二、上机操作</h2><h3 id="0、实验环境"><a href="#0、实验环境" class="headerlink" title="0、实验环境"></a>0、实验环境</h3><ul><li><p>硬件平台：一台笔电，操作系统为Win10pro 64位</p></li><li><p>软件环境：</p><p>  数据库Server版本，8.0.30 MySQL Community Server</p><p>  图形化管理工具，Navicat Premium 15.0.25</p><p>  Java开发工具，IntelliJ IDEA 2020.1</p><p>  Jdk版本，jdk1.8.0_221</p></li></ul><h3 id="1、要用的SQL语句"><a href="#1、要用的SQL语句" class="headerlink" title="1、要用的SQL语句"></a>1、要用的SQL语句</h3><p>​    (创建过程可用navicat可视化软件来完成操作，这里为了便于学习全部使用SQL语句)</p><ul><li>创建数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 先创建一个学生集合的数据库</span></span><br><span class="line"><span class="keyword">create</span> database studentdb;</span><br></pre></td></tr></table></figure><ul><li>创建表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建学生表</span></span><br><span class="line"><span class="comment">-- 整型数据&quot;tinyint unsigned&quot;的取值范围为0~255，用它来表示学生成绩</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `studentdb`.`student`(</span><br><span class="line">Name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,<span class="comment">--成绩单信息定义为非空约束</span></span><br><span class="line">    English tinyint unsigned <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    Math tinyint unsigned <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">Computer tinyint unsigned <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 再查看一下表结构</span></span><br><span class="line">use studentdb;</span><br><span class="line"><span class="keyword">desc</span> student;</span><br></pre></td></tr></table></figure><p>用navicat刷新一下数据库，发现新增了数据库studentdb和student表<br><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140922357.jpg" alt="img_202210140922357"></p><ul><li><p>插入数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 批量插入学生成绩</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `student` (Name,English,Math,Computer) <span class="keyword">values</span> (<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;69&#x27;</span>,<span class="string">&#x27;86&#x27;</span>,<span class="string">&#x27;77&#x27;</span>), (<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;55&#x27;</span>,<span class="string">&#x27;100&#x27;</span>,<span class="string">&#x27;88&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>查询表内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 输出student表中的所有记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure></li></ul><p>查询结果如下<br><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140924365.jpg" alt="img_202210140924365"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 按条件查询数据</span></span><br><span class="line"><span class="comment">-- 查询zhangsan的Computer成绩</span></span><br><span class="line"><span class="keyword">select</span> Name,Computer <span class="keyword">from</span> student <span class="keyword">where</span> Name <span class="operator">=</span> <span class="string">&#x27;zhangsan&#x27;</span>;</span><br></pre></td></tr></table></figure><p>查询结果如下<br><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140925302.jpg" alt="img_202210140925302"></p><ul><li>修改数据<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改lisi的Math成绩，改为95</span></span><br><span class="line"><span class="keyword">update</span> `student` <span class="keyword">set</span> Math <span class="operator">=</span> <span class="number">95</span> <span class="keyword">where</span> Name <span class="operator">=</span> <span class="string">&#x27;lisi&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul><p>查询到修改结果如下，修改成功<img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140925304.jpg" alt="img_202210140925304"></p><p>在数据库中刷新，student表中信息也同步修改了</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140925310.jpg" alt="img_202210140925310"></p><h3 id="2、Java操作MySQL数据库"><a href="#2、Java操作MySQL数据库" class="headerlink" title="2、Java操作MySQL数据库"></a>2、Java操作MySQL数据库</h3><h4 id="（1）使用-JDBC-技术连接-MySQL-数据库"><a href="#（1）使用-JDBC-技术连接-MySQL-数据库" class="headerlink" title="（1）使用 JDBC 技术连接 MySQL 数据库"></a>（1）使用 JDBC 技术连接 MySQL 数据库</h4><p>这里用<a href="https://www.jetbrains.com/idea/">IntelliJ IDEA</a>开发工具新建一个maven的工程连接MySQL,新建成功后首先配置pom.xml文件</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140926388.jpg" alt="img_202210140926388"></p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140926393.jpg" alt="img_202210140926393"></p><p>1.找MySQL数据库对应的驱动依赖文件</p><p>进入<a href="https://mvnrepository.com/">maven</a>仓库的官网：<a href="https://mvnrepository.com/%EF%BC%8C%E6%90%9C%E7%B4%A2mysql%E6%8E%A5%E7%9D%80%E7%82%B9%E5%87%BB%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C">https://mvnrepository.com/，搜索mysql接着点击第一个搜索结果</a></p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140927806.jpg" alt="img_202210140927806"></p><p>选择自己对应的mysql版本，复制下方的maven依赖代码</p><p>不知道自己MySQL版本的可以用DOS命令查看，我的是mysql 8.0.30版本</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140928892.jpg" alt="img_202210140928892"></p><p>选择自己安装的mysql版本<img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140929442.jpg" alt="img_202210140929442"></p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140929445.jpg" alt="img_202210140929445"></p><p>这里我自己用的是最新的mysql 8.0.30版本</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;8.0.30&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>将复制的依赖文件粘贴到pom.xml配置文件中，注意前后要加上<dependencies>和</dependencies>，修改完后该界面的左上角会出现一个刷新按钮，点击刷新，联网状态下IDEA工具会自动帮你下载对应的驱动包</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140929816.jpg" alt="img_202210140929816"></p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140929823.jpg" alt="img_202210140929823"></p><p>上面的仓库依赖配置好后，就可以进入正式的编程开发了</p><h4 id="（2）具体代码实现"><a href="#（2）具体代码实现" class="headerlink" title="（2）具体代码实现"></a>（2）具体代码实现</h4><p>新建一个Java文件，连接MySQL数据库并进行操作的基本过程如下，</p><p>step1.加载驱动</p><p>注意MySQL 8.0 以上版本的数据库连接要使用：<code>com.mysql.cj.jdbc.Driver</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载JDBC驱动</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br></pre></td></tr></table></figure><p>step2.定义用户信息和URL参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义用户信息和URL参数，连接MySQL用</span></span><br><span class="line"><span class="comment">//studentdb是要连接的数据库，需要提前创建好，且student表已包含两条成绩记录</span></span><br><span class="line"><span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/studentdb&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br></pre></td></tr></table></figure><p>step3.连接数据库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//连接数据库，使用驱动管理类；connection就表示数据库</span></span><br><span class="line"><span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(url, user, password);</span><br></pre></td></tr></table></figure><p>上面的3步是对数据库连接的基本条件，不同的是以下几步</p><p>step4.创建一个SQL语句对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个SQL语句对象，并用statement来接收</span></span><br><span class="line"><span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connection.createStatement();</span><br></pre></td></tr></table></figure><p>step5.定义SQL语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义SQL修改语句，插入一条新数据</span></span><br><span class="line"><span class="type">String</span> <span class="variable">sql1</span> <span class="operator">=</span> <span class="string">&quot;insert into `student` (Name,English,Math,Computer) values (&#x27;scofield&#x27;,&#x27;45&#x27;,&#x27;89&#x27;,&#x27;100&#x27;)&quot;</span>;</span><br></pre></td></tr></table></figure><p>step6.查询执行SQL语句后的结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//执行查询SQL语句，查看返回结果</span></span><br><span class="line"><span class="type">String</span> <span class="variable">sql2</span> <span class="operator">=</span> <span class="string">&quot;select * from student&quot;</span>;</span><br><span class="line"><span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> statement.executeQuery(sql2);</span><br></pre></td></tr></table></figure><p>step7.释放连接</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//关闭数据库连接</span></span><br><span class="line">resultSet.close();</span><br><span class="line">statement.close();</span><br><span class="line">connection.close();</span><br></pre></td></tr></table></figure><ul><li><p>向student表中添加一条记录</p><p>  这里主要用到的SQL代码如下，</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义了SQL修改语句，插入一条新数据，并返回查询结果</span></span><br><span class="line"><span class="type">String</span> <span class="variable">sql1</span> <span class="operator">=</span> <span class="string">&quot;insert into `student`(Name,English,Math,Computer) values (&#x27;scofield&#x27;,&#x27;45&#x27;,&#x27;89&#x27;,&#x27;100&#x27;)&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">sql2</span> <span class="operator">=</span> <span class="string">&quot;select * from student&quot;</span>;</span><br></pre></td></tr></table></figure><p>控制台返回的结果：</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140930818.jpg" alt="img_202210140930818"></p><p>完整代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException &#123;</span><br><span class="line">        <span class="comment">//1.加载JDBC驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="comment">//2.定义用户信息和URL参数，连接MySQL用</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/studentdb&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="comment">//3.连接数据库，使用驱动管理类；connection就表示数据库</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(url, user, password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断一下数据库连接状态</span></span><br><span class="line">        <span class="keyword">if</span>(connection == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;连接失败！&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;连接成功！&quot;</span>);</span><br><span class="line">            <span class="comment">//4.创建一个SQL语句对象，并用statement来接收</span></span><br><span class="line">            <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connection.createStatement();</span><br><span class="line">            <span class="comment">//5.定义SQL修改语句，插入一条新数据</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql1</span> <span class="operator">=</span> <span class="string">&quot;insert into `student` (Name,English,Math,Computer) values (&#x27;scofield&#x27;,&#x27;45&#x27;,&#x27;89&#x27;,&#x27;100&#x27;)&quot;</span>;</span><br><span class="line">            <span class="comment">//判断数据库是否修改成功，根据受影响的行数 &gt;= 1，即修改成功</span></span><br><span class="line">            <span class="keyword">if</span>(statement.executeUpdate(sql1) &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;数据插入成功！&quot;</span>);</span><br><span class="line">                <span class="comment">//6.执行查询SQL语句，查看返回结果</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">sql2</span> <span class="operator">=</span> <span class="string">&quot;select * from student&quot;</span>;</span><br><span class="line">                <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> statement.executeQuery(sql2);</span><br><span class="line">                System.out.println(<span class="string">&quot;student表中数据如下：&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;Name&quot;</span>+<span class="string">&quot;\t&quot;</span>+<span class="string">&quot;English&quot;</span>+<span class="string">&quot;\t&quot;</span>+<span class="string">&quot;Math &quot;</span>+<span class="string">&quot;Computer&quot;</span>);</span><br><span class="line">                <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">                    System.out.print(resultSet.getString(<span class="string">&quot;Name&quot;</span>)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                    System.out.print(resultSet.getInt(<span class="string">&quot;English&quot;</span>)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                    System.out.print(resultSet.getInt(<span class="string">&quot;Math&quot;</span>)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                    System.out.println(resultSet.getInt(<span class="string">&quot;Computer&quot;</span>)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//7.关闭数据库连接</span></span><br><span class="line">                resultSet.close();</span><br><span class="line">                statement.close();</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;数据插入失败！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>获取scofield的English成绩信息</p><p>  数据库连接的前3步操作一样，这里需要更改查询语句，并返回查询结果。</p><p>  这里主要用到的SQL代码如下，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>定义<span class="keyword">SQL</span>查询语句，查询scofield的English成绩</span><br><span class="line">String <span class="keyword">sql</span> <span class="operator">=</span> &quot; select Name,English from student where Name = &#x27;scofield&#x27;&quot;;</span><br></pre></td></tr></table></figure></li></ul><p>控制台返回的结果：</p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140931911.jpg" alt="img_202210140931911"></p><p>完整代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SelectResults</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException &#123;</span><br><span class="line">        <span class="comment">//1.加载JDBC驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="comment">//2.定义用户信息和URL参数，连接MySQL用</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/studentdb&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="comment">//3.连接数据库，使用驱动管理类；connection就表示数据库</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(url, user, password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断一下数据库连接状态</span></span><br><span class="line">        <span class="keyword">if</span>(connection == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;连接失败！&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;连接成功！&quot;</span>);</span><br><span class="line">            <span class="comment">//4.创建一个SQL语句对象，并用statement来接收</span></span><br><span class="line">            <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connection.createStatement();</span><br><span class="line">            <span class="comment">//5.定义SQL查询语句，查询scofield的English成绩</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot; select Name,English from student where Name = &#x27;scofield&#x27;&quot;</span>;</span><br><span class="line">            <span class="comment">//判断数据库是否查询成功，当返回结果不为空时，即查询成功</span></span><br><span class="line">            <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> statement.executeQuery(sql);</span><br><span class="line">            <span class="keyword">if</span>(resultSet != <span class="literal">null</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;成绩查询成功！&quot;</span>);</span><br><span class="line">                <span class="comment">//6.执行查询SQL语句，查看返回结果</span></span><br><span class="line">                System.out.println(<span class="string">&quot;student表中查询结果如下：&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;Name&quot;</span>+<span class="string">&quot;\t&quot;</span>+<span class="string">&quot;English&quot;</span>);</span><br><span class="line">                <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">                    System.out.print(resultSet.getString(<span class="string">&quot;Name&quot;</span>)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                    System.out.print(resultSet.getInt(<span class="string">&quot;English&quot;</span>)+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//7.关闭数据库连接</span></span><br><span class="line">                resultSet.close();</span><br><span class="line">                statement.close();</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;成绩查询失败！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、遇到的问题及解决方案"><a href="#三、遇到的问题及解决方案" class="headerlink" title="三、遇到的问题及解决方案"></a>三、遇到的问题及解决方案</h2><h3 id="1、找MySQL连接Java的驱动包"><a href="#1、找MySQL连接Java的驱动包" class="headerlink" title="1、找MySQL连接Java的驱动包"></a>1、找MySQL连接Java的驱动包</h3><ul><li><p>问题描述</p><p>  参考网络上绝大部分Java操作MySQL的教程，都是使用jar驱动包来操作。</p><p>  操作教程可参考<a href="https://www.runoob.com/java/java-mysql-connect.html">菜鸟教程</a>上的Java连接MySQL的操作，下载好驱动包后，用添加库的方式导入到对应项目中。最新版下载地址为：<a href="http://dev.mysql.com/downloads/connector/j/%EF%BC%8C%E8%A7%A3%E5%8E%8B%E5%90%8E%E5%BE%97%E5%88%B0">http://dev.mysql.com/downloads/connector/j/，解压后得到</a> jar 库文件，然后在对应的项目中导入该库文件。尴尬的是进入官网后并没有找到对应自己版本的MySQL驱动包，我用的是8.0.30版本，应该是目前最新的版本，官网并未提供该版本的驱动包，这简直让我蚌埠住了。</p><p>  <img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140935328.jpg" alt="img_202210140935328"></p></li></ul><ul><li><p>解决方案</p><p>  幸运的是我之前做过Java操作MongoDB数据库连接的案例，导库方式采用的是maven库的依赖文件(在maven官网也可在里面下载jar包，这里更推荐用依赖文件)。想必Java与数据库连接过程大体类似，索性就看了下相关的Java使用maven项目s来操作MySQL的教程，确实可以这样操作。于是就有了前面新建maven工程的方式来连接MySQL。需要注意的是，添加依赖代码时需要加上<dependencies>和</dependencies>，然后刷新一下maven库，否则会出现报错。</p><p>  <img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140935637.jpg" alt="img_202210140935637"></p></li></ul><h3 id="2、JDBC中——Class-forName-com-mysql-cj-jdbc-Driver"><a href="#2、JDBC中——Class-forName-com-mysql-cj-jdbc-Driver" class="headerlink" title="2、JDBC中——Class.forName(com.mysql.cj.jdbc.Driver)"></a>2、JDBC中——Class.forName(com.mysql.cj.jdbc.Driver)</h3><p>​    <strong>MySQL 8.0 以上版本的数据库连接有所不同：</strong></p><blockquote><p><code>com.mysql.jdbc.Driver</code> 更换为 <code>com.mysql.cj.jdbc.Driver</code>。</p></blockquote><p>​    若使用以下代码，程序可以返回正确结果，但程序会抛出异常。更改为<code>com.mysql.cj.jdbc.Driver</code>可以解决。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>加载JDBC驱动</span><br><span class="line">Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);</span><br></pre></td></tr></table></figure><p>​    对Class.forName(com.mysql.cj.jdbc.Driver)的深入理解，可以参考这篇文章：</p><p><a href="http://t.csdn.cn/q37Yi">    jdbc（2）——之Class.forName(com.mysql.cj.jdbc.Driver)理解</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MySQL案例1-MySQL的简单应用及用Java操作&quot;&gt;&lt;a href=&quot;#MySQL案例1-MySQL的简单应用及用Java操作&quot; class=&quot;headerlink&quot; title=&quot;MySQL案例1 MySQL的简单应用及用Java操作&quot;&gt;&lt;/a&gt;MySQL</summary>
      
    
    
    
    <category term="MySQL数据库" scheme="https://ariesfun.gitee.io/categories/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://ariesfun.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库 第二章 SQL语句</title>
    <link href="https://ariesfun.gitee.io/posts/5375.html"/>
    <id>https://ariesfun.gitee.io/posts/5375.html</id>
    <published>2022-10-05T18:08:29.328Z</published>
    <updated>2022-10-16T17:36:15.247Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL数据库-第二章-SQL语句"><a href="#MySQL数据库-第二章-SQL语句" class="headerlink" title="MySQL数据库 第二章 SQL语句"></a>MySQL数据库 第二章 SQL语句</h1><p>SQL是一种特殊目的的编程语言，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统。</p><h2 id="一、SQL语句分类"><a href="#一、SQL语句分类" class="headerlink" title="一、SQL语句分类"></a>一、SQL语句分类</h2><ul><li><p>DCL(Data Control Language)：数据控制语言，用来定义访问权限和安全级别。（不太重要，一般用navicat图形化界面来操作）</p></li><li><p>DDL(Data Definition Language)：数据定义语言，用来定义数据库对象：库、表、列等。功能：创建、删除、修改库和表结构。</p></li><li><p>DML(Data Manipulation Language)：数据操作语言，用来定义数据库记录：增、删、改表记录。</p></li><li><p>DQL(Data Query Language)：数据查询语言，用来查询记录。也是本章学习的重点。（！！！很重要）</p></li></ul><h2 id="二、DCL-数据控制语言-语法学习"><a href="#二、DCL-数据控制语言-语法学习" class="headerlink" title="二、DCL(数据控制语言)语法学习"></a>二、DCL(数据控制语言)语法学习</h2><h3 id="DCL-Data-Control-Language-：数据控制语言，用来定义访问权限和安全级别。DCL语言可用navicat软件来进行图形化界面操作。"><a href="#DCL-Data-Control-Language-：数据控制语言，用来定义访问权限和安全级别。DCL语言可用navicat软件来进行图形化界面操作。" class="headerlink" title="DCL(Data Control Language)：数据控制语言，用来定义访问权限和安全级别。DCL语言可用navicat软件来进行图形化界面操作。"></a>DCL(Data Control Language)：数据控制语言，用来定义访问权限和安全级别。<strong>DCL语言可用navicat软件来进行图形化界面操作。</strong></h3><p><strong>tips:！！！该节内容不是很重要</strong></p><h3 id="1、创建用户、修改密码、删除用户"><a href="#1、创建用户、修改密码、删除用户" class="headerlink" title="1、创建用户、修改密码、删除用户"></a>1、创建用户、修改密码、删除用户</h3><h4 id="（1）创建用户"><a href="#（1）创建用户" class="headerlink" title="（1）创建用户"></a>（1）创建用户</h4><p>创建一个用户，让该用户只能在指定ip地址或任意ip地址上来登录mysql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建用户</span></span><br><span class="line"><span class="comment">-- 指定ip，语法：create user &#x27;用户名&#x27;@&#x27;ip地址&#x27; identified by &#x27;密码&#x27;;</span></span><br><span class="line"><span class="comment">-- 任意ip，ip地址段用‘%’来表示，例如</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="（2）修改密码"><a href="#（2）修改密码" class="headerlink" title="（2）修改密码"></a>（2）修改密码</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改密码，8.0版本的mysql直接赋值新密码就行</span></span><br><span class="line"><span class="comment">-- 注意:若创建用户后直接连接mysql了，修改密码后需用新密码重新连接，再进行后面的测试</span></span><br><span class="line"><span class="comment">-- 语法：set password for &#x27;用户名&#x27;@&#x27;ip地址&#x27; = &#x27;新密码&#x27;;</span></span><br><span class="line"><span class="keyword">set</span> password <span class="keyword">for</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 以上是用sql语句来操作，如果直接修改表，也是可以创建用户和修改密码的，但是要在mysql数据库下的user表修改，改完后需要刷新权限后才能生效，刷新语句如下</span></span><br><span class="line">flush privileges;<span class="comment">-- 在本地数据库下刷新</span></span><br></pre></td></tr></table></figure><h4 id="（3）删除用户"><a href="#（3）删除用户" class="headerlink" title="（3）删除用户"></a>（3）删除用户</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="comment">-- 语法：drop user &#x27;用户名&#x27;@&#x27;ip地址&#x27;;</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="2、给用户授予权限、撤销权限，查看权限"><a href="#2、给用户授予权限、撤销权限，查看权限" class="headerlink" title="2、给用户授予权限、撤销权限，查看权限"></a>2、给用户授予权限、撤销权限，查看权限</h3><p>给【指定用户】在【指定数据库】上赋予【指定权限】，权限有很多，常用的有以下几个：</p><ul><li>create：可以创建数据库</li><li>insert：可以插入数据</li><li>delete：可以删除数据</li><li>select：可以查询数据</li><li>update：可以更新数据</li></ul><h4 id="（1）授权"><a href="#（1）授权" class="headerlink" title="（1）授权"></a>（1）授权</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 授权（包含所有权限或指定权限）</span></span><br><span class="line"><span class="comment">-- 语法 ：grant 权限1,权限2,... on `数据库名`.`某表` to &#x27;用户名&#x27;@&#x27;ip地址&#x27;;</span></span><br><span class="line"><span class="comment">-- 注意：这里数据库名和表名用了撇符号``（按键在键盘左上角,用&#x27;&#x27;单引号也可以），这样写的目的是防止将名称识别成关键字,造成sql语句执行失败</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> `student`.`<span class="keyword">user</span>` <span class="keyword">to</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 授权所有的表，用&quot;*&quot;</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> `student`.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 授予指定权限</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span>,<span class="keyword">insert</span>,<span class="keyword">delete</span>,<span class="keyword">select</span>,<span class="keyword">update</span> <span class="keyword">on</span> `student`.`<span class="keyword">user</span>` <span class="keyword">to</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="（2）撤销权限"><a href="#（2）撤销权限" class="headerlink" title="（2）撤销权限"></a>（2）撤销权限</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 撤销权限（包含所有权限或指定权限）</span></span><br><span class="line"><span class="comment">-- 语法：revoke 权限1,权限2,... on &#x27;数据库名&#x27;.&#x27;某表&#x27; from &#x27;用户名&#x27;@&#x27;ip地址&#x27;;</span></span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">all</span> <span class="keyword">on</span> `student`.`<span class="keyword">user</span>` <span class="keyword">from</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">create</span>,<span class="keyword">insert</span>,<span class="keyword">delete</span>,<span class="keyword">select</span>,<span class="keyword">update</span> <span class="keyword">on</span> `student`.`<span class="keyword">user</span>` <span class="keyword">from</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="（3）查看权限"><a href="#（3）查看权限" class="headerlink" title="（3）查看权限"></a>（3）查看权限</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看授权</span></span><br><span class="line"><span class="comment">-- 语法：show grants for 用户名 或 &#x27;用户名&#x27;@&#x27;ip地址&#x27;;</span></span><br><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> ariesfun;</span><br></pre></td></tr></table></figure><h3 id="3、操作实例"><a href="#3、操作实例" class="headerlink" title="3、操作实例"></a>3、操作实例</h3><h4 id="（1）注意事项"><a href="#（1）注意事项" class="headerlink" title="（1）注意事项"></a>（1）注意事项</h4><p>每条语句选中后单独执行，且输出信息为”OK”说明操作成功<br><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140121828.jpg" alt="Snipaste_2022-10-04_16-23-35"></p><p>新建一个test连接测试DCL语言用，先点测试连接，成功后再点击确定<br><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140121829.jpg" alt="Snipaste_2022-10-04_16-18-51"></p><p>查看数据库中表的权限<br><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140121830.jpg" alt="Snipaste_2022-10-04_16-54-44"></p><h4 id="（2）具体的实例操作"><a href="#（2）具体的实例操作" class="headerlink" title="（2）具体的实例操作"></a>（2）具体的实例操作</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 测试用，以下每一行语句按顺序单独执行一次</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建用户并更改密码</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="keyword">set</span> password <span class="keyword">for</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建数据库</span></span><br><span class="line"><span class="keyword">create</span> database student;</span><br><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line"><span class="comment">-- 新建表，为了方便这里先用navicat软件，在本地连接中的student中新建一张user表和一张score表（后面章节会有基本表的定义语句）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 进行权限操作,授权和撤权成对使用</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> `student`.`<span class="keyword">user</span>` <span class="keyword">to</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">all</span> <span class="keyword">on</span> `student`.`<span class="keyword">user</span>` <span class="keyword">from</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span>,<span class="keyword">insert</span>,<span class="keyword">delete</span>,<span class="keyword">select</span>,<span class="keyword">update</span> <span class="keyword">on</span> `student`.`<span class="keyword">user</span>` <span class="keyword">to</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> ariesfun;<span class="comment">-- 查看一下授权情况</span></span><br><span class="line"><span class="comment">-- 运行完上面的语句，test连接中的student数据库中又出现了user表</span></span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">create</span>,<span class="keyword">insert</span>,<span class="keyword">delete</span>,<span class="keyword">select</span>,<span class="keyword">update</span> <span class="keyword">on</span> `student`.`<span class="keyword">user</span>` <span class="keyword">from</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> `student`.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> ariesfun;</span><br><span class="line"><span class="comment">-- test连接中的student数据库中又会出现user表和score表两张表</span></span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">all</span> <span class="keyword">on</span> `student`.<span class="operator">*</span> <span class="keyword">from</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 最后删除刚创建的用户，再次连接test就会操作失败</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;ariesfun&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="三、DDL-数据定义语言"><a href="#三、DDL-数据定义语言" class="headerlink" title="三、DDL(数据定义语言)"></a>三、DDL(数据定义语言)</h2><p>DDL语言主要是用于<strong>定义或改变表（TABLE）结构</strong>，<u>主要的命令有CREATE、ALTER、DROP</u>等</p><h3 id="1、创建表的语法"><a href="#1、创建表的语法" class="headerlink" title="1、创建表的语法"></a>1、创建表的语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名 (</span><br><span class="line"></span><br><span class="line">字段名<span class="number">1</span>(即列名) 类型(宽度) 约束条件,</span><br><span class="line"></span><br><span class="line">字段名<span class="number">2</span> 类型(宽度) 约束条件,</span><br><span class="line"></span><br><span class="line">字段名<span class="number">3</span> 类型(宽度) 约束条件,</span><br><span class="line">    </span><br><span class="line">.......</span><br><span class="line">    </span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在关系型数据库中，我们需要设定表名、列名，同时还需要指定数据类型（常用的：整型、浮点型、字符串型）。</p><h3 id="2、常用的数据类型"><a href="#2、常用的数据类型" class="headerlink" title="2、常用的数据类型"></a>2、常用的数据类型</h3><blockquote><p><strong>整型</strong></p></blockquote><table><thead><tr><th>MySQL数据类型</th><th>含义（默认有符号）</th></tr></thead><tbody><tr><td>tinyint</td><td>1字节，范围（-128~127）</td></tr><tr><td>smallint</td><td>2字节，范围（-32768~32767）</td></tr><tr><td><u>mediumint</u></td><td><u>3字节</u>，范围（-8388608~8388607）</td></tr><tr><td>int</td><td>4字节，范围（-2147483648~2147483647）</td></tr><tr><td>bigint</td><td>8字节，范围（+-9.22 * 10^18^）</td></tr></tbody></table><p>在整型中我们默认使用的都是【有符号】的，当然了，我们也可以<u>加上unsigned关键字，定义成【无符号】的类型</u>，那么对应的取值范围就会发生改变：</p><p>如：tinyint unsigned的取值范围为0~255，</p><p>宽度n的作用需要配合zerofill进行使用( zerofill指0填充)： 如：int(4) unsigned zerofill  ，查询结果: 0001 0002 1000</p><blockquote><p><strong>浮点型</strong></p></blockquote><table><thead><tr><th>MySQL数据类型</th><th>含义</th></tr></thead><tbody><tr><td>float(m, d)</td><td>4字节，单精度浮点型，m总长度，d小数位</td></tr><tr><td>double(m, d)</td><td>8字节，双精度浮点型，m总长度，d小数位（可用来表示很大或很小的数）</td></tr><tr><td>decimal(m, d)</td><td>decimal是存储为字符串的浮点数(无误差且精度高，可用来表示余额)，对应Java中的Bigdecimal</td></tr></tbody></table><p>我们用一个例子来判断小括号内参数的含义，针对数据类型为float(5, 3)的列，做了以下试验：</p><ul><li>插入123.45678，最后查询得到的结果为99.999（会取满足条件的最大值）；</li><li>插入12.34567，最后查询结果为12.346（会有四舍五入）；</li></ul><p>所以，在使用浮点型的时候，还是要注意陷阱，要以插入数据库中的实际结果为准。</p><blockquote><p><strong>字符串型</strong></p></blockquote><table><thead><tr><th>MySQL数据类型</th><th>含义</th></tr></thead><tbody><tr><td>char(n)，n指字符个数</td><td>固定长度，最多255个字节（字符）</td></tr><tr><td>varchar(n)</td><td>可变长度，最大容量65535个字节</td></tr><tr><td>tinytext</td><td>可变长度，最大容量255个字节</td></tr><tr><td>text</td><td>可变长度，最大容量65535个字节</td></tr><tr><td>mediumtext</td><td>可变长度，最大容量2^24^-1个字节，16MB</td></tr><tr><td>longtext</td><td>可变长度，最大容量2^32^-1个字节， 4GB</td></tr></tbody></table><p><strong>（1）char和varchar两类型的区别（这两个也最常用）：</strong></p><ul><li>char类型是【<strong>定长</strong>】的类型，即当定义的是char(10)，输入的是”abc”这三个字符时，它们占的空间一样是10个字符，包括7个空字节。当输入的字符长度超过指定的数时，char会截取超出的字符。而且，当存储char值时，MySQL会自动删除输入字符串末尾的空格。</li><li><strong>char类型适合存储很短的、一般固定长度的字符串。</strong>例如，用char(1)来定义性别；char类型非常适合存储密码的MD5值（将不定长的变为定长的值），因为MD5是一个定长的值。对于非常短的列，char比varchar在存储空间上也更有效率。</li><li><strong>varchar(n)类型用于存储【可变长】的类型，且长度最大为n个字符的可变长度字符数据</strong>。比如varchar(10), 输入abc三个字符，那么实际存储大小为3个字节。除此之外，varchar还需要使用1或2个额外字节记录字符串的长度，如果列的最大长度小于等于255字节（是定义的最长长度，不是实际长度），则使用1个字节表示长度，否则使用2个字节来表示。n表示的是最大的长度。</li><li><u>char类型每次修改的数据长度相同，效率更高；varchar类型每次修改的数据长度不同，效率更低。</u></li></ul><p><strong>（2）varchar和text</strong></p><ul><li><p>text不能设置默认值，varchar可以。</p></li><li><p>text类型，包括（MEDIUMTEXT，LONGTEXT）也受单表 65535 <strong>最大行宽度限制</strong>，所以他支持溢出存储，只会存放前 768 字节在数据页中，而剩余的数据则会存储在溢出段中(磁盘上)。虽然 text 字段会把超过 768 字节的大部分数据溢出存放到硬盘其他空间，看上去是会更加增加磁盘压力。但从处理形态上来讲 varchar 大于 768 字节后，实质上存储和 text 差别不是太大了。因为超长的 varchar 也是会用到溢出存储，读取该行也是要去读硬盘然后加载到内存，基本认为是一样的。</p></li><li><p><u>根据存储的实现：可以考虑用 varchar 替代 text，因为 varchar 存储更弹性，存储数据少的话性能更高</u>。</p></li><li><p>如果存储的数据大于64K，就必须使用到 mediumtext或longtext，因为 varchar 已经存不下了。</p></li><li><p>如果 varchar(255+) 存储大于255字节后，和 text 在存储机制是一样的，性能也相差无几。</p><p>详细解释可参考文章：<a href="http://t.csdn.cn/mrgk1">MySQL 的 varchar 与 text 对比</a></p></li></ul><blockquote><p><strong>日期和时间数据类型</strong></p></blockquote><table><thead><tr><th>MySQL数据类型</th><th>含义</th></tr></thead><tbody><tr><td>date</td><td>3字节，日期，格式：2022-10-01</td></tr><tr><td>time</td><td>3字节，时间，格式：08:00:00</td></tr><tr><td>datetime</td><td>8字节，日期时间，格式：2022-10-01 08:00:00</td></tr><tr><td>timestamp</td><td>4字节，自动存储记录修改的时间</td></tr><tr><td>year</td><td>1字节，年份</td></tr></tbody></table><h3 id="3、建表约束"><a href="#3、建表约束" class="headerlink" title="3、建表约束"></a>3、建表约束</h3><p>目前我们已经学会了如何创建表，但是一张表不止有一列，且数据库中的表不止有一个，建表约束说的就是，我们应该<strong>如何规范表中的数据以及表和表的关系</strong>。</p><h4 id="（1）MySQL约束类型"><a href="#（1）MySQL约束类型" class="headerlink" title="（1）MySQL约束类型"></a>（1）MySQL约束类型</h4><table><thead><tr><th>约束名称</th><th>描述</th></tr></thead><tbody><tr><td>NOT NULL</td><td>非空约束（不是 null）</td></tr><tr><td>UNIQUE</td><td>唯一约束，取值不允许重复</td></tr><tr><td>PRIMARY KEY</td><td>主键约束（主关键字），自带非空、唯一、索引约束属性</td></tr><tr><td>DEFAULT</td><td>默认值（缺省值）</td></tr><tr><td>FOREIGN KEY</td><td>外键约束（外关键字，会用到其他表信息）</td></tr></tbody></table><h4 id="（2）NOT-NULL约束"><a href="#（2）NOT-NULL约束" class="headerlink" title="（2）NOT NULL约束"></a>（2）NOT NULL约束</h4><p>非空约束指的是，如果我们要在这张表中添加数据，<u>设定了非空约束的列必须要赋值，不能为空</u></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 先创建一个书店的数据库</span><br><span class="line">create database bookstore;-- 用database或schema来创建的作用一样</span><br><span class="line">-- 创建作者表</span><br><span class="line">create table `bookstore`.`author`(</span><br><span class="line">    aut_id int, </span><br><span class="line">    aut_name varchar(50) not null,-- 这就是非空约束的定义</span><br><span class="line">gander char(1) default &#x27;男&#x27;,</span><br><span class="line">country varchar(50),</span><br><span class="line">birthday datetime-- 最后不用加逗号</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="（3）UNIQUE约束"><a href="#（3）UNIQUE约束" class="headerlink" title="（3）UNIQUE约束"></a>（3）UNIQUE约束</h4><p>唯一约束指的是，如果我们要在这张表中添加数据，<u>设定了唯一约束的列中的值不能有重复，不能为空</u></p><ul><li>唯一约束，实现方法1（在表的定义最后施加）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建图书表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `bookstore`.`book`(</span><br><span class="line"><span class="comment">-- 或者加上&quot;if not&quot;表示如果不存在就建该表,eg.create table if not `ydlclass`.`book`该语句跟上边语句作用一样</span></span><br><span class="line">book_id <span class="type">int</span> <span class="keyword">primary</span>,</span><br><span class="line">book_name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">bar_code <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">aut_id <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="keyword">foreign</span> key (key_id) <span class="keyword">references</span> author(aut_id)，<span class="comment">-- 外键约束</span></span><br><span class="line">    <span class="keyword">unique</span>(bar_code)   <span class="comment">-- 这就是唯一约束的定义</span></span><br><span class="line">);<span class="comment">-- sql语句单句执行时最后面可不用加&quot;;&quot;</span></span><br></pre></td></tr></table></figure><ul><li>实现方法2（在字段名定义的后面施加）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建图书表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `bookstore`.`book`(</span><br><span class="line">book_id <span class="type">int</span> <span class="keyword">primary</span>,</span><br><span class="line">book_name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">bar_code <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span>,  <span class="comment">-- 这就是唯一约束的定义</span></span><br><span class="line">aut_id <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="（4）DEFAULT约束"><a href="#（4）DEFAULT约束" class="headerlink" title="（4）DEFAULT约束"></a>（4）DEFAULT约束</h4><p>默认约束指的是，如果我们要在这张表中添加数据，<u>如果为给设定了默认约束的列赋值，该列会自动填充默认值</u></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建作者表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `bookstore`.`author`(</span><br><span class="line">    aut_id <span class="type">int</span>, </span><br><span class="line">    aut_name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">gander <span class="type">char</span>(<span class="number">1</span>) <span class="keyword">default</span> <span class="string">&#x27;男&#x27;</span>, <span class="comment">-- 这就是默认约束</span></span><br><span class="line">country <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">birthday datetime</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="（5）PRIMARY-KEY约束"><a href="#（5）PRIMARY-KEY约束" class="headerlink" title="（5）PRIMARY KEY约束"></a>（5）PRIMARY KEY约束</h4><p>主键（PRIMARY KEY）的完整称呼是“主键约束”，是 MySQL中使用最为频繁的约束。一般情况下，为了便于 DBMS 更快的查找到表中的记录，都会在表中设置一个主键。</p><p>主键分为<u>单字段主键和多字段联合主键</u>，本节将分别讲解这两种主键约束的创建、修改和删除。</p><p>使用主键应注意以下几点：</p><ul><li><u>每个表只能定义一个主键。</u></li><li><u>主键值必须唯一标识表中的每一行，且不能为 NULL</u>，即表中不可能存在有相同主键值的两行数据。这是唯一性原则。</li><li><u>一个字段名只能在联合主键字段表中出现一次。</u></li><li>【联合主键】不能包含不必要的多余字段。当把联合主键的某一字段删除后，如果剩下的字段构成的主键仍然满足唯一性原则，那么这个联合主键是不正确的。这是最小化原则。</li></ul><blockquote><p><strong>单个字段作为主键</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建作者表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `bookstore`.`author`(</span><br><span class="line">    aut_id <span class="type">int</span> <span class="keyword">primary</span> key,      <span class="comment">-- 这就是主键约束 </span></span><br><span class="line">    <span class="comment">-- 主键约束也可用&quot;primary key(aud_id)&quot;来定义主键或联合主键，但要放在语句最后</span></span><br><span class="line">    aut_name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">gander <span class="type">char</span>(<span class="number">1</span>) <span class="keyword">default</span> <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">country <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">birthday datetime</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p><strong>联合主键：多个字段同时作为主键</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建作者表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `bookstore`.`author`(</span><br><span class="line">`aut_id` <span class="type">int</span> ,</span><br><span class="line">`aut_name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">`gander` <span class="type">char</span>(<span class="number">1</span>) <span class="keyword">default</span> <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">`country` <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">`brithday` datetime,</span><br><span class="line"><span class="keyword">primary</span> key(aut_id,aut_name)   <span class="comment">-- 这就是联合主键</span></span><br><span class="line">);  </span><br></pre></td></tr></table></figure><h4 id="（6）AUTO-INCREMENT约束"><a href="#（6）AUTO-INCREMENT约束" class="headerlink" title="（6）AUTO_INCREMENT约束"></a>（6）AUTO_INCREMENT约束</h4><p><strong>需要配合主键使用</strong>，有个这个约束，我们在向表中插入数据时，不需要额外关心主键的数据，<u>它会自动帮我们维护一个递增的主键</u></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建图书表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `bookstore`.`book`(</span><br><span class="line">book_id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,<span class="comment">-- 这就是自动递增</span></span><br><span class="line">book_name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">bar_code <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">aut_id <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="（7）FOREIGN-KEY约束"><a href="#（7）FOREIGN-KEY约束" class="headerlink" title="（7）FOREIGN KEY约束"></a>（7）FOREIGN KEY约束</h4><p>外键维护的表与表之间的关系，<u>它规定了当前列的数据必须来源于一张其他表的某一列中的主键</u></p><p>外键会产生的效果</p><p><u>1、删除表时，如果不删除引用外键的表，被引用的表不能直接删除</u></p><p><u>2、外键的值必须来源于引用的表的主键字段</u></p><h4 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h4><blockquote><p><strong>FOREIGN KEY (column list) REFERENCES [primary key table] (column list);</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建作者表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `bookstore`.`author`(</span><br><span class="line">    aut_id <span class="type">int</span> <span class="keyword">primary</span> key, </span><br><span class="line">    aut_name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">gander <span class="type">char</span>(<span class="number">1</span>) <span class="keyword">default</span> <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">country <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">birthday datetime</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建图书表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `bookstore`.`book`(</span><br><span class="line">book_id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">book_name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">bar_code <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">aut_id <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="keyword">foreign</span> key (aut_id) <span class="keyword">references</span> author(aut_id)<span class="comment">-- 这就是外键约束</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="4、对表的修改操作"><a href="#4、对表的修改操作" class="headerlink" title="4、对表的修改操作"></a>4、对表的修改操作</h4><p>查看当前数据库中所有表:<code>SHOW TABLES;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看所有表</span></span><br><span class="line"><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure><p>查看表结构:<code>DESC 表名;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看表结构</span></span><br><span class="line"><span class="keyword">desc</span> authors;</span><br></pre></td></tr></table></figure><p><u>修改表有5个操作</u>，但语法前缀都是一样的:<code>ALTER TABLE 表名...</code>（不重要）</p><ul><li><p>添加列（语法）：<code>ALTER TABLE 表名 add (列名 列类型，... ，列名 列类型);</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 给author表添加列</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> author <span class="keyword">add</span> (hobby <span class="type">varchar</span>(<span class="number">20</span>),address <span class="type">varchar</span>(<span class="number">50</span>));</span><br></pre></td></tr></table></figure></li><li><p>修改列类型： <code>ALTER TABLE 表名 MODIFY 列名 列的新类型;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 给author表修改列类型</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> author modify address <span class="type">varchar</span>(<span class="number">100</span>);</span><br></pre></td></tr></table></figure></li><li><p>列名称、列类型一起修改：<code>ALTER TABLE 表名 CHANGE 原列名 新列名 列名类型;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 改变列名和属性</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> author change address addr <span class="type">varchar</span>(<span class="number">60</span>);</span><br></pre></td></tr></table></figure></li><li><p>删除列：<code>ALTER TABLE 表名 DROP 列名;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除列</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> author <span class="keyword">drop</span> addr;</span><br></pre></td></tr></table></figure></li><li><p>修改表名：<code>ALTER TABLE 表名 RENAME TO 新表名</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改表名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> author rename authors;</span><br></pre></td></tr></table></figure></li><li><p>删除表：<code>ALTER TABLE 表名 DROP 列名;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- !!!删除表，需谨慎操作</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> `<span class="keyword">user</span>`;</span><br></pre></td></tr></table></figure></li></ul><h3 id="四、DML-数据操作语言-（！！！很重要）"><a href="#四、DML-数据操作语言-（！！！很重要）" class="headerlink" title="四、DML(数据操作语言)（！！！很重要）"></a>四、DML(数据操作语言)（！！！很重要）</h3><p>该语言用来对表记录进行<strong>操作（增、删、改）</strong>，<u>不包含查询</u>。</p><h4 id="1、插入数据"><a href="#1、插入数据" class="headerlink" title="1、插入数据"></a>1、插入数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `authors` (aut_name,gander,country,birthday,hobby) <span class="keyword">values</span> (<span class="string">&#x27;海伦·凯勒&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;漂亮国&#x27;</span>,<span class="string">&#x27;1960-1-1&#x27;</span>,<span class="string">&#x27;旅游&#x27;</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `authors` <span class="keyword">values</span> (<span class="string">&#x27;余华&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;1970-1-1&#x27;</span>,<span class="string">&#x27;看书&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>说明:</strong></p><ol><li>在数据库中所有的<strong>字符串类型，必须使用单引号</strong>。</li><li>(列名1，列名2，列名3)可省略，表示按照表中的顺序插入。但不建议采取这种写法，因为降低了程序的可读性。</li></ol><p>当然我们还可以批量插入：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 批量插入数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `authors` (aut_name,gander,country,birthday,hobby) <span class="keyword">values</span> (<span class="string">&#x27;海伦·凯勒&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;漂亮国&#x27;</span>,<span class="string">&#x27;1960-1-1&#x27;</span>,<span class="string">&#x27;旅游&#x27;</span>),(<span class="string">&#x27;余华&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;中国&#x27;</span>,<span class="string">&#x27;1970-1-1&#x27;</span>,<span class="string">&#x27;看书&#x27;</span>); <span class="comment">-- 可批量插入</span></span><br></pre></td></tr></table></figure><h4 id="2、修改记录"><a href="#2、修改记录" class="headerlink" title="2、修改记录"></a>2、修改记录</h4><p>修改某列的全部值：<code>update 表名 set 列名1=列值1(，列名2=列值2)(, ... );</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改数据</span></span><br><span class="line"><span class="keyword">update</span> `authors` <span class="keyword">set</span> aut_name <span class="operator">=</span> <span class="string">&#x27;鲁迅&#x27;</span>,country<span class="operator">=</span><span class="string">&#x27;中国&#x27;</span>;</span><br></pre></td></tr></table></figure><p>上边的语句会改表中所有的数据全部修改，因此我们可以使用where语句进行限制，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> `authors` <span class="keyword">set</span> aut_name <span class="operator">=</span> <span class="string">&#x27;马云&#x27;</span> <span class="keyword">where</span> aut_id <span class="operator">=</span> <span class="number">5</span>;<span class="comment">-- 限制条件可以是其他逻辑运算</span></span><br></pre></td></tr></table></figure><p>where是一个很关键的关键字，我们可以使用where关键字实现丰富的筛选，他很像我们的if语句，可以使用各种条件运算：</p><p>可使用的逻辑运算符如下：<code>=、!=、&lt;&gt;、&lt;、&gt;、&gt;=、&lt;=、between...and、in(…)、is null、not、or、and</code>，其中in(a,b,… )的用法表示集合，选中限制下的那几条数据。</p><ul><li><code>where aut_id &gt;1</code></li><li><code>where aut_id in (1,3,5) -- 修改指定的三条数据</code></li><li><code>where aut_id between 1 and 4 -- 修改从id从1到4的数据</code></li><li><code>where aut_id &gt;1 and aut_name=&#39;xxx&#39; --多条限制 </code></li><li><code>where aut_name is null -- 修改为空的</code></li><li><code>where aut_name is not null -- 修改不为空的</code> </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 字符串也使用&quot;=&quot;比较，不是&quot;==&quot;也不是&quot;equals&quot;</span></span><br><span class="line"><span class="keyword">update</span> `authors` <span class="keyword">set</span> aut_name <span class="operator">=</span> <span class="string">&#x27;赵四&#x27;</span>,</span><br><span class="line"><span class="comment">-- 使用in关键字</span></span><br><span class="line"><span class="keyword">update</span> `authors` <span class="keyword">set</span> aut_name <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span>,country<span class="operator">=</span><span class="string">&#x27;中国&#x27;</span> <span class="keyword">where</span> aut_id <span class="keyword">in</span>(<span class="number">5</span>,<span class="number">7</span>); <span class="comment">-- 修改指定的两条数据</span></span><br><span class="line"><span class="comment">-- 限制条件可以是其他任何逻辑运算</span></span><br><span class="line"><span class="keyword">update</span> `authors` <span class="keyword">set</span> aut_name <span class="operator">=</span> <span class="string">&#x27;王五&#x27;</span>,country<span class="operator">=</span><span class="string">&#x27;中国&#x27;</span> <span class="keyword">where</span> gander <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">and</span> country <span class="operator">=</span> <span class="string">&#x27;中国&#x27;</span>;</span><br><span class="line"><span class="comment">-- 使用between...and关键字</span></span><br><span class="line"><span class="keyword">update</span> `authors` <span class="keyword">set</span> aut_name <span class="operator">=</span> <span class="string">&#x27;张伟&#x27;</span>,country<span class="operator">=</span><span class="string">&#x27;中国&#x27;</span> <span class="keyword">where</span> aut_id <span class="keyword">between</span> <span class="number">5</span> <span class="keyword">and</span> <span class="number">7</span>;</span><br><span class="line"><span class="comment">-- 空值使用is null \  is not null</span></span><br><span class="line"><span class="keyword">update</span> `authors` <span class="keyword">set</span> aut_name <span class="operator">=</span> <span class="string">&#x27;王五&#x27;</span>,country<span class="operator">=</span><span class="string">&#x27;中国&#x27;</span> <span class="keyword">where</span> birthday <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h4 id="3、删除数据"><a href="#3、删除数据" class="headerlink" title="3、删除数据"></a>3、删除数据</h4><p>语法：<code>delete from 表名 (where 条件);</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- !!!删除表,删除条件可以是任何的逻辑运算（in,between...）</span><br><span class="line">delete from authors; -- delete是按行删，俗称删库跑路</span><br></pre></td></tr></table></figure><p>不加where条件时会删除表中所有的记录，所以为了防止这种失误操作，很多数据库往往都会有备份。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 删除指定行的数据</span><br><span class="line">delete from author where auth_id = 1;</span><br></pre></td></tr></table></figure><p>还有一个关键字：truncate，truncate是DDL语言(数据定义语言)，操作立即生效，原数据不会放到rollback segment中，不能回滚。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 不可随意使用truncate</span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> authors; <span class="comment">-- truncate会直接删掉整张表，再重新建表</span></span><br></pre></td></tr></table></figure><ul><li>当表被truncate后，表和索引的所占空间会恢复到初始大小，delete操作不会减少表和索引的所占空间。</li><li>truncate和delete只删除数据，drop则删除整个表（结构和数据）。</li><li>truncate速度快，效率高，可以理解为先把表删除了，再重新建立。</li><li>truncate和delete均不会使表结构及其列、约束、索引等发生改变。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MySQL数据库-第二章-SQL语句&quot;&gt;&lt;a href=&quot;#MySQL数据库-第二章-SQL语句&quot; class=&quot;headerlink&quot; title=&quot;MySQL数据库 第二章 SQL语句&quot;&gt;&lt;/a&gt;MySQL数据库 第二章 SQL语句&lt;/h1&gt;&lt;p&gt;SQL是一种</summary>
      
    
    
    
    <category term="MySQL数据库" scheme="https://ariesfun.gitee.io/categories/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://ariesfun.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库 第一章 MySQL数据库介绍及环境搭建</title>
    <link href="https://ariesfun.gitee.io/posts/11881.html"/>
    <id>https://ariesfun.gitee.io/posts/11881.html</id>
    <published>2022-10-05T18:08:20.900Z</published>
    <updated>2022-10-16T17:21:16.404Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL数据库-第一章-MySQL数据库介绍及环境搭建"><a href="#MySQL数据库-第一章-MySQL数据库介绍及环境搭建" class="headerlink" title="MySQL数据库 第一章 MySQL数据库介绍及环境搭建"></a>MySQL数据库 第一章 MySQL数据库介绍及环境搭建</h1><h2 id="一、数据库的概念"><a href="#一、数据库的概念" class="headerlink" title="一、数据库的概念"></a>一、数据库的概念</h2><ul><li>数据库是【<strong>按照数据结构来组织、存储和管理数据的仓库</strong>】，<u>是一个长期存储在计算机内的、有组织的、可共享的、统一管理的大量数据的集合</u>。</li><li>数据对于公司来说是最宝贵的财富之一，而程序员的工作就是对数据的管理，包括运算、流转、存储、展示等，数据库的最重要的功能就是【<strong>存储数据</strong>】，绝大部分的数据需要进行持久化，长期保存，而数据库就可以很好的帮助我们完成这个工作。</li></ul><h2 id="二、MySQL介绍"><a href="#二、MySQL介绍" class="headerlink" title="二、MySQL介绍"></a>二、MySQL介绍</h2><ul><li>MySQL是一个【<strong>关系型数据库管理系统</strong>】，由瑞典【MySQL AB】公司开发，属于 【Oracle】旗下产品。MySQL 是最流行的【关系型数据库管理系统】之一，在 【WEB】应用方面，MySQL是最好的 <strong>【RDBMS】</strong> (Relational Database Management System，<u>关系数据库管理系统)</u> 应用软件之一。</li><li>MySQL是一种关系型数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</li><li>MySQL所使用的 【SQL 语言】是用于访问【数据库】的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和商业版，<u>由于其体积小、速度快、总体拥有成本低，尤其是【开放源码】这一特点</u>，一般中小型网站的开发都选择 MySQL 作为网站数据库。</li></ul><h2 id="三、MySQL的安装"><a href="#三、MySQL的安装" class="headerlink" title="三、MySQL的安装"></a>三、MySQL的安装</h2><p>社区版官方下载网站：</p><p><a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a></p><p><img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202210140120077.jpg" alt="Snipaste_2022-10-05_15-46-13"></p><p>基本的安装过程如下：</p><p><img src="https://ydlclass.com/doc21xnv/assets/image-20220419111843961.1b721a3e.png" alt="image-20220419111843961"></p><p>下载后我们可以自定义安装：</p><p>选择安装server和两个客户端进行体验：</p><p><img src="https://ydlclass.com/doc21xnv/assets/image-20220421193949698.6e202212.png" alt="image-20220419111843961"></p><p>自己可以体验一下workbench和mysqlsh。</p><h2 id="四、安装navicat"><a href="#四、安装navicat" class="headerlink" title="四、安装navicat"></a>四、安装navicat</h2><p>需要破解：破解过程看视频。</p><h2 id="五、基本概念"><a href="#五、基本概念" class="headerlink" title="五、基本概念"></a>五、基本概念</h2><h3 id="1、数据库"><a href="#1、数据库" class="headerlink" title="1、数据库"></a>1、数据库</h3><p>数据库（Database）是按照数据结构来组织、存储和管理数据的仓库。在mysql中可以创建多个数据库，一个数据库可以管理很多张表。</p><p>有个很形象的对比，例如execl中的一个execl文件就是一个数据库，一个sheet页就是一张表，表里边可以有所需要的数据：</p><p>查看所有数据库：<code>SHOW DATABASES;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><p>我们可以在登陆 MySQL 服务后，使用 <strong>create</strong> 命令创建数据库，语法如下，<u>两条sql等效</u>:</p><p><code>CREATE DATABASE 数据库名;</code>    or     <code>CREATE SCHEMA 数据库名;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database student;  <span class="comment">-- 或用create schema student;</span></span><br></pre></td></tr></table></figure><p>使用数据库：<code>USE 数据库名;</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use student;</span><br></pre></td></tr></table></figure><h3 id="2、表"><a href="#2、表" class="headerlink" title="2、表"></a>2、表</h3><p><u>表（TABLE）是数据库中用来存储数据的对象，是有结构的数据的集合</u>，是整个数据库系统的基础。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MySQL数据库-第一章-MySQL数据库介绍及环境搭建&quot;&gt;&lt;a href=&quot;#MySQL数据库-第一章-MySQL数据库介绍及环境搭建&quot; class=&quot;headerlink&quot; title=&quot;MySQL数据库 第一章 MySQL数据库介绍及环境搭建&quot;&gt;&lt;/a&gt;My</summary>
      
    
    
    
    <category term="MySQL数据库" scheme="https://ariesfun.gitee.io/categories/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://ariesfun.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="https://ariesfun.gitee.io/posts/22648.html"/>
    <id>https://ariesfun.gitee.io/posts/22648.html</id>
    <published>2022-08-02T02:59:40.680Z</published>
    <updated>2022-11-26T10:03:48.405Z</updated>
    
    <content type="html"><![CDATA[<p>6级标题：</p><h1 id="标题1"><a href="#标题1" class="headerlink" title="标题1"></a>标题1</h1><h2 id="标题2"><a href="#标题2" class="headerlink" title="标题2"></a>标题2</h2><h3 id="标题3"><a href="#标题3" class="headerlink" title="标题3"></a>标题3</h3><h4 id="标题4"><a href="#标题4" class="headerlink" title="标题4"></a>标题4</h4><h5 id="标题5"><a href="#标题5" class="headerlink" title="标题5"></a>标题5</h5><h6 id="标题6"><a href="#标题6" class="headerlink" title="标题6"></a>标题6</h6><p>引用：</p><blockquote><p>这是一段引用</p></blockquote><p>有序列表：<br>把大象放进冰箱<br>1.打开冰箱<br>2.把大象塞进去<br>3.关上冰箱</p><p>无序列表：</p><ul><li>阿里巴巴</li><li>华为云</li></ul><ul><li>千叶结锤</li><li>稚晖君</li></ul><p>任务列表：<br>明天要做的事：</p><ul><li><input disabled="" type="checkbox"> 吃饭</li><li><input checked="" disabled="" type="checkbox"> 睡觉</li><li><input checked="" disabled="" type="checkbox"> 打豆豆</li></ul><p>代码块：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数学公式：<br>$$<br>\frac{\partial f}{\partial x} = 2\sqrt{a}x<br>$$</p><p>表格：<br>|姓名|年龄|成绩|<br>|:—|—:|:—:|<br>|张三|19|99|<br>|李四|20|88|</p><p>脚注：</p><p>内容型</p><p>一键三连<a href="%E6%8A%95%E5%B8%81%E3%80%81%E6%94%B6%E8%97%8F">^三连</a></p><h2 id="添加横线："><a href="#添加横线：" class="headerlink" title="添加横线："></a>添加横线：</h2><p>链接型</p><p>引用链接：<br><a href="www.baidu.com" title="搜索引擎">百度</a></p><p><a href="www.baidu.com" title="搜索引擎">百度</a></p><p>跳转链接：<br>请参考<a href="#%E6%A0%87%E9%A2%981">标题1</a></p><p>ULR:<br><a href="http://www.baidu.com/">http://www.baidu.com</a></p><p>图片链接：<br><img src="https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png" alt="百度" title="百度搜索"></p><p>其他行内格式：</p><p>斜体：<em>斜体</em></p><p>加粗：<strong>加粗</strong></p><p>行内代码：<code>printf()</code></p><p>下划线：<u>下划线</u></p><p>表情符号：:smile:</p><p>行内数学公式：$\theta=x^2$</p><p>化学式：H<del>2</del>O</p><p>次方：X^2^</p><p>文字高亮：==这是一段高亮文字==</p><p>嵌入视频：</p><iframe src="//player.bilibili.com/player.html?aid=327623069&bvid=BV1JA411h7Gw&cid=171385214&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;6级标题：&lt;/p&gt;
&lt;h1 id=&quot;标题1&quot;&gt;&lt;a href=&quot;#标题1&quot; class=&quot;headerlink&quot; title=&quot;标题1&quot;&gt;&lt;/a&gt;标题1&lt;/h1&gt;&lt;h2 id=&quot;标题2&quot;&gt;&lt;a href=&quot;#标题2&quot; class=&quot;headerlink&quot; title=&quot;标题</summary>
      
    
    
    
    <category term="Markdown" scheme="https://ariesfun.gitee.io/categories/Markdown/"/>
    
    
    <category term="Markdown" scheme="https://ariesfun.gitee.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="https://ariesfun.gitee.io/posts/63785.html"/>
    <id>https://ariesfun.gitee.io/posts/63785.html</id>
    <published>2021-07-14T04:00:00.000Z</published>
    <updated>2022-11-26T05:02:03.659Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用MarkDown进行博文编写"><a href="#用MarkDown进行博文编写" class="headerlink" title="用MarkDown进行博文编写"></a>用MarkDown进行博文编写</h1><span id="more"></span> <h2 id="2022"><a href="#2022" class="headerlink" title="2022"></a>2022</h2><p>使用标题时需要用#号  </p><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>这是第一个段落内容 </p><p>这是第二个段落内容</p><h2 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h2><blockquote><p>这是一段引用段落，将会被高亮显示</p></blockquote><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>[网易云] (<a href="https://music.163.com/?from=infinity">https://music.163.com/?from=infinity</a>)</p><h2 id="风景图"><a href="#风景图" class="headerlink" title="风景图"></a>风景图</h2><p><img src="https://img.zcool.cn/community/01d5725e6eea9ba80121651859942f.jpg@1280w_1l_2o_100sh.jpg" alt="图片1"></p><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul><li>无序列表项</li><li>无序列表项</li><li>无序列表项 <h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2></li></ul><ol><li>有序列表项1</li><li>有序列表项2</li><li>有序列表项3 <h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2></li></ol><hr><hr><hr><hr><p>（ps：只要符号不小于三个以上都可显示分割线。）</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;用MarkDown进行博文编写&quot;&gt;&lt;a href=&quot;#用MarkDown进行博文编写&quot; class=&quot;headerlink&quot; title=&quot;用MarkDown进行博文编写&quot;&gt;&lt;/a&gt;用MarkDown进行博文编写&lt;/h1&gt;</summary>
    
    
    
    <category term="Markdown" scheme="https://ariesfun.gitee.io/categories/Markdown/"/>
    
    
    <category term="blog" scheme="https://ariesfun.gitee.io/tags/blog/"/>
    
    <category term="hexo" scheme="https://ariesfun.gitee.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>写在前面的话</title>
    <link href="https://ariesfun.gitee.io/posts/first.html"/>
    <id>https://ariesfun.gitee.io/posts/first.html</id>
    <published>2021-03-31T16:27:24.675Z</published>
    <updated>2022-11-29T17:50:18.569Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h1><hr><p>先简单介绍一下自已哈，我是某四非学校计算机学院大数据专业的一名同学，20级的。爱搞技术，爱音乐，爱摄影，爱骑行，也更爱生活…总之就是一个很不服输的小少年，在逐渐完善自己的技术栈。“因为路就在那，你得往前走“，有点鸡汤哈，希望自己能在毕业之余拿到心仪的Offer，有着坚定的人生目标。</p><hr><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><ul><li><p>其实最初搭建博客已经是一年半前了（21年4月），那时刚加入学校的计算机协会，认识了好多学校的大佬，发现自己的技术栈能力太弱了（菜狗本人），我对那些愿意在讲台上分享自己的网络技术和见解的同学，表示十分地羡慕。那时的自己也并不知道要写点什么该分享什么，随后基本就没咋更新了，觉得能搭建一个个人网站本身就是一件很酷的事。</p></li><li><p>放个我之前的第一个小博客的图，哈哈~<br>  <img src="https://imgbed-funblog.oss-cn-chengdu.aliyuncs.com/img/202211260946495.jpg" alt="img-202211260946495"></p></li></ul><h2 id="二、一些想法"><a href="#二、一些想法" class="headerlink" title="二、一些想法"></a>二、一些想法</h2><ul><li><p>现在是大三了，有时我的脑子里总是有很多想法，也总是想做点什么，所以我就打算重新运营一下博客，记录一些自己的想法和学习内容，开启更新之旅，可能后边的更新频率不是太高哈，但我会在保证文章质量的前提下尽量多更点文章出来（先挖个坑）。</p></li><li><p>博客内容大体就是计算机专业课的知识，跟一些互联网技术分享和摄影日志（待整理），等后边时间充裕的话也会整一些好玩的活（清单很早就列好了，不能鸽了）。</p></li><li><p>当然啦，写博客最大的受益者当然是自己了，学习之余记录一下自己的学习过程和问题解决，将自己学习的过程和理解，用图文的方式阶段性地输出，这也是一种创作的方式。就像给别人讲故事一样，能把一个知识点或内容用通俗的、自己易理解的语言讲明白，就说明你对它已经掌握了。这也算是一种对已学过的内容做巩固和强化的学习方式了。哪怕之后忘了，再来翻看自己的学习笔记，也能会快速重新掌握该知识或技术，可以极大得提升自己的学习效率，节省很多时间。写博客可以不断完善自己的技术栈或技能树，想必这也是大多数爱开技术分享博客的原因所在了。</p></li><li><p>同时后边的博客功能会慢慢完善，其实我不太在意有多少人关注我的博客，嗯…既然把内容分享出来了，我还是希望它能发挥出它的价值，帮到正真想学习这类知识的同学。如果很幸运的话，此刻你正在浏览我的博客，希望我的记录和分享能对你有所帮助，我们可以一起学习一起进步，有疑问的话欢迎私信或者评论，对我的内容指正，我也希望能收到一些对博客内容的反馈意见。</p><p>  既然都看到这里了，对你有帮助的话，不妨Mark一下呀。</p><p>  最后分享一个很有意义的视频，来自B站UP:<a href="https://space.bilibili.com/36979113">李天意学长</a>，希望能找到自己正真热爱的事物。</p>  <iframe src="//player.bilibili.com/player.html?aid=512898944&bvid=BV1z3411w7Si&cid=759541412&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>  </li></ul><h2 id="三、近期打算"><a href="#三、近期打算" class="headerlink" title="三、近期打算"></a>三、近期打算</h2><p>分隔一下下</p><hr><ul><li><p><strong>算法！算法！算法！</strong>这学期我才渐渐了解到学习算法的重要性，现在是跟着y总好好学习算法，定期刷题，因为菜所以得学习，我也顺便报名参加了明年的蓝桥杯大赛，希望能学有所成。</p></li><li><p><strong>数学！数学！数学</strong>！大一大二确实没咋好好学，真是书到用时方恨少了，我学的大数据的核心课基本都跟数学和算法设计紧密联系，后边可以开个板块聊聊。</p></li><li><p><strong>英语！英语！英语</strong>！今年12月份冲一下六级，英语的重要性不用多说，你可能认为即便学了一定的英语知识了，后边大概率也用不上。但对于计算机领域却不是这样，它的上限很高，新的技术，好的资源，ICPC(ACM)赛事，好的官网教程（各类优质的开发工具大多源自国外）等，都使用英语作为第一语言。尝试着自己去理解一些英文学习资源，遇到问题时可能会让你事半功倍。</p></li><li><p>后边会更新一些专业课笔记补全知识漏洞，目前我对计算机网络和数据库方面的技术较为感兴趣，学习计组对我来说真的很要命。。。 现在我是自己找高质量的网课资源来学习。希望今年的专业课考核能取得一个不错的成绩。</p><p>  想说的暂时就这么多了。加油，干起！！!</p><p>  编辑于22/11/26</p></li></ul><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;写在前面的话&quot;&gt;&lt;a href=&quot;#写在前面的话&quot; class=&quot;headerlink&quot; title=&quot;写在前面的话&quot;&gt;&lt;/a&gt;写在前面的话&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;先简单介绍一下自已哈，我是某四非学校计算机学院大数据专业的一名同学，20级的。爱搞技术，爱音乐，爱</summary>
      
    
    
    
    <category term="个人随想" scheme="https://ariesfun.gitee.io/categories/%E4%B8%AA%E4%BA%BA%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="随想" scheme="https://ariesfun.gitee.io/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
</feed>
